rm -rf ./bin *_debug.csv test_results .ast_tools
make: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
PROCESS_TARGETS_DEFINED changed to coreir= cpu= clockwork=
g++ -I./bin -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I../../hw_support -Wall -I/aha/Halide-to-Hardware/../rdai/platform_runtimes/clockwork_sim/include -DC_TEST -Wno-unknown-pragmas -Wno-unused-label -Wno-uninitialized -Wno-literal-suffix -O3 process.cpp ../../hw_support/./bin/hardware_process_helper.o ../../hw_support/./bin/coreir_sim_plugins.o   -ldl -lpthread -lz -lcurses -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -lcoreir -lcoreir-commonlib -lcoreirsim -lcoreir-float -lcoreir-float_DW -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib -lcoreir-cgralib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -lcoreir-lakelib -lcoreir-lakelib -DVERBOSE=0 -lpng16  -ljpeg -I/usr/include/libpng16 -I/usr/include/libpng16/.. -no-pie  -o bin/process
process.cpp: In function ‘void saveHalideBufferToRawBigEndian(const Halide::Runtime::Buffer<short unsigned int>&, const string&)’:
process.cpp:84:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
   84 |     for (int i = 0; i < buffer.number_of_elements(); ++i) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
process.cpp: In lambda function:
process.cpp:117:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  117 |                 for (int i = 0; i < indices.size(); ++i) {
      |                                 ~~^~~~~~~~~~~~~~~~
process.cpp:118:51: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  118 |                     std::cerr << indices[i] << (i < indices.size() - 1 ? ", " : "");
      |                                                 ~~^~~~~~~~~~~~~~~~~~~~
At global scope:
cc1plus: warning: unrecognized command line option ‘-Wno-unknown-warning-option’
g++ -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -g -fno-rtti conv2D_fp_generator.cpp /aha/Halide-to-Hardware/distrib/lib/libHalide.a /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp  -ldl -lpthread -lz -lcurses -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -lcoreir -lcoreir-commonlib -lcoreirsim -lcoreir-float -lcoreir-float_DW -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib -lcoreir-cgralib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -lcoreir-lakelib -lcoreir-lakelib -DVERBOSE=0 -o bin/conv2D_fp.generator
HALIDE_GEN_ARGS changed to in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1
bin/conv2D_fp.generator -g conv2D_fp -f conv2D_fp target=host-x86-64-enable_ponds-bfloat_hardware-clockwork -e clockwork,html  in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1  -o ./bin
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
Warning at /aha/Halide-to-Hardware/distrib/tools/GenGen.cpp:4:
It is meaningless to bound dimension w of function hw_bias to be within [0, 16] because the function is scheduled inline.
found an xcel for func hw_output with loop x_host of type CombinedCallFunc
processing hw_output
Found an xcel call: _hls_target.hw_output
Found an accelerator: _hls_accelerator.hw_output
Warning:
Warning: Unrolling a for loop of extent 1: bias_glb.s0.w.v155
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_glb.s0.w.v155
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_glb.s0.w.v155
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_glb.s0.w.v155
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_glb.s0.w.v155
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_glb.s0.w.v155
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Warning:
Warning: Unrolling a for loop of extent 1: bias_cgra.s0.w.w_cgra.v159
Lowering after final simplification:
assert((reinterpret(uint64, output.buffer) != (uint64)0), halide_error_buffer_argument_is_null("output"))
assert((reinterpret(uint64, kernel.buffer) != (uint64)0), halide_error_buffer_argument_is_null("kernel"))
assert((reinterpret(uint64, input.buffer) != (uint64)0), halide_error_buffer_argument_is_null("input"))
assert((reinterpret(uint64, bias.buffer) != (uint64)0), halide_error_buffer_argument_is_null("bias"))
if (_halide_buffer_is_bounds_query(bias.buffer)) {
  _halide_buffer_init(bias.buffer, _halide_buffer_get_shape(bias.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 1, make_struct((halide_dimension_t *), 0, 16, 1, 0), (uint64)0)
}
if (_halide_buffer_is_bounds_query(input.buffer)) {
  _halide_buffer_init(input.buffer, _halide_buffer_get_shape(input.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 3, make_struct((halide_dimension_t *), 0, 4, 1, 0, 0, 101, 4, 0, 0, 101, 404, 0), (uint64)0)
}
if (_halide_buffer_is_bounds_query(kernel.buffer)) {
  _halide_buffer_init(kernel.buffer, _halide_buffer_get_shape(kernel.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 4, make_struct((halide_dimension_t *), 0, 16, 1, 0, 0, 4, 16, 0, 0, 3, 64, 0, 0, 3, 192, 0), (uint64)0)
}
if (_halide_buffer_is_bounds_query(output.buffer)) {
  _halide_buffer_init(output.buffer, _halide_buffer_get_shape(output.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 3, make_struct((halide_dimension_t *), 0, 16, 1, 0, 0, 50, 16, 0, 0, 50, 800, 0), (uint64)0)
}
if (!(_halide_buffer_is_bounds_query(output.buffer) || (_halide_buffer_is_bounds_query(kernel.buffer) || (_halide_buffer_is_bounds_query(bias.buffer) || _halide_buffer_is_bounds_query(input.buffer))))) {
  assert((_halide_buffer_get_type(bias.buffer) == (uint32)69633), halide_error_bad_type("Input buffer bias", _halide_buffer_get_type(bias.buffer), (uint32)69633))
  assert((_halide_buffer_get_dimensions(bias.buffer) == 1), halide_error_bad_dimensions("Input buffer bias", _halide_buffer_get_dimensions(bias.buffer), 1))
  assert((_halide_buffer_get_type(input.buffer) == (uint32)69633), halide_error_bad_type("Input buffer input", _halide_buffer_get_type(input.buffer), (uint32)69633))
  assert((_halide_buffer_get_dimensions(input.buffer) == 3), halide_error_bad_dimensions("Input buffer input", _halide_buffer_get_dimensions(input.buffer), 3))
  assert((_halide_buffer_get_type(kernel.buffer) == (uint32)69633), halide_error_bad_type("Input buffer kernel", _halide_buffer_get_type(kernel.buffer), (uint32)69633))
  assert((_halide_buffer_get_dimensions(kernel.buffer) == 4), halide_error_bad_dimensions("Input buffer kernel", _halide_buffer_get_dimensions(kernel.buffer), 4))
  assert((_halide_buffer_get_type(output.buffer) == (uint32)69633), halide_error_bad_type("Output buffer output", _halide_buffer_get_type(output.buffer), (uint32)69633))
  assert((_halide_buffer_get_dimensions(output.buffer) == 3), halide_error_bad_dimensions("Output buffer output", _halide_buffer_get_dimensions(output.buffer), 3))
  assert(((_halide_buffer_get_min(bias.buffer, 0) <= 0) && (16 <= (_halide_buffer_get_extent(bias.buffer, 0) + _halide_buffer_get_min(bias.buffer, 0)))), halide_error_access_out_of_bounds("Input buffer bias", 0, 0, 15, _halide_buffer_get_min(bias.buffer, 0), ((_halide_buffer_get_extent(bias.buffer, 0) + _halide_buffer_get_min(bias.buffer, 0)) + -1)))
  assert((0 <= _halide_buffer_get_extent(bias.buffer, 0)), halide_error_buffer_extents_negative("Input buffer bias", 0, _halide_buffer_get_extent(bias.buffer, 0)))
  assert(((_halide_buffer_get_min(input.buffer, 0) <= 0) && (4 <= (_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)))), halide_error_access_out_of_bounds("Input buffer input", 0, 0, 3, _halide_buffer_get_min(input.buffer, 0), ((_halide_buffer_get_extent(input.buffer, 0) + _halide_buffer_get_min(input.buffer, 0)) + -1)))
  assert((0 <= _halide_buffer_get_extent(input.buffer, 0)), halide_error_buffer_extents_negative("Input buffer input", 0, _halide_buffer_get_extent(input.buffer, 0)))
  assert(((_halide_buffer_get_min(input.buffer, 1) <= 0) && (101 <= (_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)))), halide_error_access_out_of_bounds("Input buffer input", 1, 0, 100, _halide_buffer_get_min(input.buffer, 1), ((_halide_buffer_get_extent(input.buffer, 1) + _halide_buffer_get_min(input.buffer, 1)) + -1)))
  assert((0 <= _halide_buffer_get_extent(input.buffer, 1)), halide_error_buffer_extents_negative("Input buffer input", 1, _halide_buffer_get_extent(input.buffer, 1)))
  assert(((_halide_buffer_get_min(input.buffer, 2) <= 0) && (101 <= (_halide_buffer_get_extent(input.buffer, 2) + _halide_buffer_get_min(input.buffer, 2)))), halide_error_access_out_of_bounds("Input buffer input", 2, 0, 100, _halide_buffer_get_min(input.buffer, 2), ((_halide_buffer_get_extent(input.buffer, 2) + _halide_buffer_get_min(input.buffer, 2)) + -1)))
  assert((0 <= _halide_buffer_get_extent(input.buffer, 2)), halide_error_buffer_extents_negative("Input buffer input", 2, _halide_buffer_get_extent(input.buffer, 2)))
  assert(((_halide_buffer_get_min(kernel.buffer, 0) <= 0) && (16 <= (_halide_buffer_get_extent(kernel.buffer, 0) + _halide_buffer_get_min(kernel.buffer, 0)))), halide_error_access_out_of_bounds("Input buffer kernel", 0, 0, 15, _halide_buffer_get_min(kernel.buffer, 0), ((_halide_buffer_get_extent(kernel.buffer, 0) + _halide_buffer_get_min(kernel.buffer, 0)) + -1)))
  assert((0 <= _halide_buffer_get_extent(kernel.buffer, 0)), halide_error_buffer_extents_negative("Input buffer kernel", 0, _halide_buffer_get_extent(kernel.buffer, 0)))
  assert(((_halide_buffer_get_min(kernel.buffer, 1) <= 0) && (4 <= (_halide_buffer_get_extent(kernel.buffer, 1) + _halide_buffer_get_min(kernel.buffer, 1)))), halide_error_access_out_of_bounds("Input buffer kernel", 1, 0, 3, _halide_buffer_get_min(kernel.buffer, 1), ((_halide_buffer_get_extent(kernel.buffer, 1) + _halide_buffer_get_min(kernel.buffer, 1)) + -1)))
  assert((0 <= _halide_buffer_get_extent(kernel.buffer, 1)), halide_error_buffer_extents_negative("Input buffer kernel", 1, _halide_buffer_get_extent(kernel.buffer, 1)))
  assert(((_halide_buffer_get_min(kernel.buffer, 2) <= 0) && (3 <= (_halide_buffer_get_extent(kernel.buffer, 2) + _halide_buffer_get_min(kernel.buffer, 2)))), halide_error_access_out_of_bounds("Input buffer kernel", 2, 0, 2, _halide_buffer_get_min(kernel.buffer, 2), ((_halide_buffer_get_extent(kernel.buffer, 2) + _halide_buffer_get_min(kernel.buffer, 2)) + -1)))
  assert((0 <= _halide_buffer_get_extent(kernel.buffer, 2)), halide_error_buffer_extents_negative("Input buffer kernel", 2, _halide_buffer_get_extent(kernel.buffer, 2)))
  assert(((_halide_buffer_get_min(kernel.buffer, 3) <= 0) && (3 <= (_halide_buffer_get_extent(kernel.buffer, 3) + _halide_buffer_get_min(kernel.buffer, 3)))), halide_error_access_out_of_bounds("Input buffer kernel", 3, 0, 2, _halide_buffer_get_min(kernel.buffer, 3), ((_halide_buffer_get_extent(kernel.buffer, 3) + _halide_buffer_get_min(kernel.buffer, 3)) + -1)))
  assert((0 <= _halide_buffer_get_extent(kernel.buffer, 3)), halide_error_buffer_extents_negative("Input buffer kernel", 3, _halide_buffer_get_extent(kernel.buffer, 3)))
  assert(((_halide_buffer_get_min(output.buffer, 0) <= 0) && (16 <= (_halide_buffer_get_extent(output.buffer, 0) + _halide_buffer_get_min(output.buffer, 0)))), halide_error_access_out_of_bounds("Output buffer output", 0, 0, 15, _halide_buffer_get_min(output.buffer, 0), ((_halide_buffer_get_extent(output.buffer, 0) + _halide_buffer_get_min(output.buffer, 0)) + -1)))
  assert((0 <= _halide_buffer_get_extent(output.buffer, 0)), halide_error_buffer_extents_negative("Output buffer output", 0, _halide_buffer_get_extent(output.buffer, 0)))
  assert(((_halide_buffer_get_min(output.buffer, 1) <= 0) && (50 <= (_halide_buffer_get_extent(output.buffer, 1) + _halide_buffer_get_min(output.buffer, 1)))), halide_error_access_out_of_bounds("Output buffer output", 1, 0, 49, _halide_buffer_get_min(output.buffer, 1), ((_halide_buffer_get_extent(output.buffer, 1) + _halide_buffer_get_min(output.buffer, 1)) + -1)))
  assert((0 <= _halide_buffer_get_extent(output.buffer, 1)), halide_error_buffer_extents_negative("Output buffer output", 1, _halide_buffer_get_extent(output.buffer, 1)))
  assert(((_halide_buffer_get_min(output.buffer, 2) <= 0) && (50 <= (_halide_buffer_get_extent(output.buffer, 2) + _halide_buffer_get_min(output.buffer, 2)))), halide_error_access_out_of_bounds("Output buffer output", 2, 0, 49, _halide_buffer_get_min(output.buffer, 2), ((_halide_buffer_get_extent(output.buffer, 2) + _halide_buffer_get_min(output.buffer, 2)) + -1)))
  assert((0 <= _halide_buffer_get_extent(output.buffer, 2)), halide_error_buffer_extents_negative("Output buffer output", 2, _halide_buffer_get_extent(output.buffer, 2)))
  assert((_halide_buffer_get_stride(bias.buffer, 0) == 1), halide_error_constraint_violated("bias.stride.0", _halide_buffer_get_stride(bias.buffer, 0), "1", 1))
  assert((_halide_buffer_get_stride(input.buffer, 0) == 1), halide_error_constraint_violated("input.stride.0", _halide_buffer_get_stride(input.buffer, 0), "1", 1))
  assert((_halide_buffer_get_stride(kernel.buffer, 0) == 1), halide_error_constraint_violated("kernel.stride.0", _halide_buffer_get_stride(kernel.buffer, 0), "1", 1))
  assert((_halide_buffer_get_stride(output.buffer, 0) == 1), halide_error_constraint_violated("output.stride.0", _halide_buffer_get_stride(output.buffer, 0), "1", 1))
  assert((abs(int64(_halide_buffer_get_extent(bias.buffer, 0))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("bias", abs(int64(_halide_buffer_get_extent(bias.buffer, 0))), (uint64)2147483647))
  assert((abs(int64(_halide_buffer_get_extent(input.buffer, 0))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs(int64(_halide_buffer_get_extent(input.buffer, 0))), (uint64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_stride(input.buffer, 1)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_stride(input.buffer, 1)))), (uint64)2147483647))
  assert(((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0))) <= (int64)2147483647), halide_error_buffer_extents_too_large("input", (int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0))), (int64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(input.buffer, 2))*int64(_halide_buffer_get_stride(input.buffer, 2)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs((int64(_halide_buffer_get_extent(input.buffer, 2))*int64(_halide_buffer_get_stride(input.buffer, 2)))), (uint64)2147483647))
  assert((((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0)))*int64(_halide_buffer_get_extent(input.buffer, 2))) <= (int64)2147483647), halide_error_buffer_extents_too_large("input", ((int64(_halide_buffer_get_extent(input.buffer, 1))*int64(_halide_buffer_get_extent(input.buffer, 0)))*int64(_halide_buffer_get_extent(input.buffer, 2))), (int64)2147483647))
  assert((abs(int64(_halide_buffer_get_extent(kernel.buffer, 0))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs(int64(_halide_buffer_get_extent(kernel.buffer, 0))), (uint64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_stride(kernel.buffer, 1)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs((int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_stride(kernel.buffer, 1)))), (uint64)2147483647))
  assert(((int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_extent(kernel.buffer, 0))) <= (int64)2147483647), halide_error_buffer_extents_too_large("kernel", (int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_extent(kernel.buffer, 0))), (int64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(kernel.buffer, 2))*int64(_halide_buffer_get_stride(kernel.buffer, 2)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs((int64(_halide_buffer_get_extent(kernel.buffer, 2))*int64(_halide_buffer_get_stride(kernel.buffer, 2)))), (uint64)2147483647))
  assert((((int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_extent(kernel.buffer, 0)))*int64(_halide_buffer_get_extent(kernel.buffer, 2))) <= (int64)2147483647), halide_error_buffer_extents_too_large("kernel", ((int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_extent(kernel.buffer, 0)))*int64(_halide_buffer_get_extent(kernel.buffer, 2))), (int64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(kernel.buffer, 3))*int64(_halide_buffer_get_stride(kernel.buffer, 3)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs((int64(_halide_buffer_get_extent(kernel.buffer, 3))*int64(_halide_buffer_get_stride(kernel.buffer, 3)))), (uint64)2147483647))
  assert(((((int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_extent(kernel.buffer, 0)))*int64(_halide_buffer_get_extent(kernel.buffer, 2)))*int64(_halide_buffer_get_extent(kernel.buffer, 3))) <= (int64)2147483647), halide_error_buffer_extents_too_large("kernel", (((int64(_halide_buffer_get_extent(kernel.buffer, 1))*int64(_halide_buffer_get_extent(kernel.buffer, 0)))*int64(_halide_buffer_get_extent(kernel.buffer, 2)))*int64(_halide_buffer_get_extent(kernel.buffer, 3))), (int64)2147483647))
  assert((abs(int64(_halide_buffer_get_extent(output.buffer, 0))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs(int64(_halide_buffer_get_extent(output.buffer, 0))), (uint64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_stride(output.buffer, 1)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_stride(output.buffer, 1)))), (uint64)2147483647))
  assert(((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0))) <= (int64)2147483647), halide_error_buffer_extents_too_large("output", (int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0))), (int64)2147483647))
  assert((abs((int64(_halide_buffer_get_extent(output.buffer, 2))*int64(_halide_buffer_get_stride(output.buffer, 2)))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs((int64(_halide_buffer_get_extent(output.buffer, 2))*int64(_halide_buffer_get_stride(output.buffer, 2)))), (uint64)2147483647))
  assert((((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0)))*int64(_halide_buffer_get_extent(output.buffer, 2))) <= (int64)2147483647), halide_error_buffer_extents_too_large("output", ((int64(_halide_buffer_get_extent(output.buffer, 1))*int64(_halide_buffer_get_extent(output.buffer, 0)))*int64(_halide_buffer_get_extent(output.buffer, 2))), (int64)2147483647))
  assert((_halide_buffer_get_host(bias.buffer) != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Input buffer bias"))
  assert((_halide_buffer_get_host(input.buffer) != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Input buffer input"))
  assert((_halide_buffer_get_host(kernel.buffer) != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Input buffer kernel"))
  assert((_halide_buffer_get_host(output.buffer) != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Output buffer output"))
  realize bias_host.stencil([0, 16]) {
    produce bias_host.stencil {
      for (bias_host.s0.w, 0, 16) {
        bias_host.stencil(bias_host.s0.w) = (let t75 = reinterpret(uint32, float32(bias[(bias_host.s0.w - _halide_buffer_get_min(bias.buffer, 0))])) in uint16((bitwise_and((t75 + (uint32)32768), bitwise_not((uint32((((t75 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))
      }
    }
    consume bias_host.stencil {
      realize input_host.stencil([0, 4], [0, 101], [0, 101]) {
        produce input_host.stencil {
          for (input_host.s0.y, 0, 101) {
            for (input_host.s0.x, 0, 101) {
              for (input_host.s0.z, 0, 4) {
                input_host.stencil(input_host.s0.z, input_host.s0.x, input_host.s0.y) = (let t76 = reinterpret(uint32, float32(input[(((_halide_buffer_get_stride(input.buffer, 1)*input_host.s0.x) + ((_halide_buffer_get_stride(input.buffer, 2)*input_host.s0.y) - ((_halide_buffer_get_min(input.buffer, 1)*_halide_buffer_get_stride(input.buffer, 1)) + (_halide_buffer_get_min(input.buffer, 0) + (_halide_buffer_get_min(input.buffer, 2)*_halide_buffer_get_stride(input.buffer, 2)))))) + input_host.s0.z)])) in uint16((bitwise_and((t76 + (uint32)32768), bitwise_not((uint32((((t76 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))
              }
            }
          }
        }
        consume input_host.stencil {
          allocate hw_kernel[bfloat16 * 16 * 4 * 3 * 3]
          produce hw_kernel {
            for (hw_kernel.s0.y, 0, 3) {
              for (hw_kernel.s0.x, 0, 3) {
                let t111 = (((hw_kernel.s0.y*3) + hw_kernel.s0.x)*64)
                for (hw_kernel.s0.z, 0, 4) {
                  let t112 = ((hw_kernel.s0.z*16) + t111)
                  for (hw_kernel.s0.w, 0, 16) {
                    hw_kernel[(hw_kernel.s0.w + t112)] = (let t77 = reinterpret(uint32, float32(kernel[(((_halide_buffer_get_stride(kernel.buffer, 1)*hw_kernel.s0.z) + ((_halide_buffer_get_stride(kernel.buffer, 2)*hw_kernel.s0.x) + ((_halide_buffer_get_stride(kernel.buffer, 3)*hw_kernel.s0.y) - ((_halide_buffer_get_min(kernel.buffer, 1)*_halide_buffer_get_stride(kernel.buffer, 1)) + (_halide_buffer_get_min(kernel.buffer, 0) + ((_halide_buffer_get_min(kernel.buffer, 3)*_halide_buffer_get_stride(kernel.buffer, 3)) + (_halide_buffer_get_min(kernel.buffer, 2)*_halide_buffer_get_stride(kernel.buffer, 2)))))))) + hw_kernel.s0.w)])) in uint16((bitwise_and((t77 + (uint32)32768), bitwise_not((uint32((((t77 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))
                  }
                }
              }
            }
          }
          consume hw_kernel {
            realize kernel_host.stencil([0, 16], [0, 4], [0, 3], [0, 3]) {
              produce kernel_host.stencil {
                for (kernel_host.s0.y, 0, 3) {
                  for (kernel_host.s0.x, 0, 3) {
                    let t114 = (((kernel_host.s0.y*3) + kernel_host.s0.x)*64)
                    for (kernel_host.s0.z, 0, 4) {
                      let t115 = ((kernel_host.s0.z*16) + t114)
                      for (kernel_host.s0.w, 0, 16) {
                        kernel_host.stencil(kernel_host.s0.w, kernel_host.s0.z, kernel_host.s0.x, kernel_host.s0.y) = hw_kernel[(kernel_host.s0.w + t115)]
                      }
                    }
                  }
                }
              }
              free hw_kernel
              consume kernel_host.stencil {
                realize hw_output.stencil([0, 16], [0, 50], [0, 50]) {
                  produce hw_output.stencil {
                    produce _hls_accelerator.hw_output {
                      produce _hls_target.hw_output {
                        realize bias_glb.stencil([0, 16]) {
                          produce bias_glb.stencil {
                            for (bias_glb.s0.w.w, 0, 16) {
                              bias_glb.stencil(bias_glb.s0.w.w) = bias_host.stencil(bias_glb.s0.w.w)
                            }
                          }
                          consume bias_glb.stencil {
                            realize input_glb.stencil([0, 4], [0, 181], [0, 181]) {
                              produce input_glb.stencil {
                                for (input_glb.s0.y, 0, 101) {
                                  for (input_glb.s0.x, 0, 101) {
                                    input_glb.stencil(0, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(0, input_glb.s0.x, input_glb.s0.y)
                                    input_glb.stencil(1, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(1, input_glb.s0.x, input_glb.s0.y)
                                    input_glb.stencil(2, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(2, input_glb.s0.x, input_glb.s0.y)
                                    input_glb.stencil(3, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(3, input_glb.s0.x, input_glb.s0.y)
                                  }
                                }
                              }
                              consume input_glb.stencil {
                                realize kernel_glb.stencil([0, 16], [0, 4], [0, 3], [0, 3]) {
                                  produce kernel_glb.stencil {
                                    for (kernel_glb.s0.y, 0, 3) {
                                      for (kernel_glb.s0.x, 0, 3) {
                                        for (kernel_glb.s0.z, 0, 4) {
                                          for (kernel_glb.s0.w.w, 0, 4) {
                                            kernel_glb.stencil((kernel_glb.s0.w.w*4), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil((kernel_glb.s0.w.w*4), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                                            kernel_glb.stencil(((kernel_glb.s0.w.w*4) + 1), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil(((kernel_glb.s0.w.w*4) + 1), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                                            kernel_glb.stencil(((kernel_glb.s0.w.w*4) + 2), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil(((kernel_glb.s0.w.w*4) + 2), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                                            kernel_glb.stencil(((kernel_glb.s0.w.w*4) + 3), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil(((kernel_glb.s0.w.w*4) + 3), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                                          }
                                        }
                                      }
                                    }
                                  }
                                  consume kernel_glb.stencil {
                                    realize output_glb.stencil([0, 16], [0, 50], [0, 50]) {
                                      produce output_glb.stencil {
                                        for (output_glb.s0.y.y_glb, 0, 5) {
                                          let t117 = (output_glb.s0.y.y_glb*20)
                                          let t116 = (output_glb.s0.y.y_glb*10)
                                          for (output_glb.s0.x.x_glb, 0, 5) {
                                            realize bias_cgra.stencil([0, 16], [(output_glb.s0.x.x_glb*10), 10], [t116, 10]) {
                                              produce bias_cgra.stencil {
                                                let t118 = (output_glb.s0.x.x_glb*10)
                                                for (bias_cgra.s0.y, t116, 10) {
                                                  for (bias_cgra.s0.x, t118, 10) {
                                                    for (bias_cgra.s0.w.w_cgra.w_cgra, 0, 16) {
                                                      bias_cgra.stencil(bias_cgra.s0.w.w_cgra.w_cgra, bias_cgra.s0.x, bias_cgra.s0.y) = bias_glb.stencil(bias_cgra.s0.w.w_cgra.w_cgra)
                                                    }
                                                  }
                                                }
                                              }
                                              consume bias_cgra.stencil {
                                                realize output_cgra.stencil([0, 16], [(output_glb.s0.x.x_glb*10), 10], [t116, 10]) {
                                                  produce output_cgra.stencil {
                                                    let t119 = (output_glb.s0.x.x_glb*10)
                                                    for (output_cgra.s0.y, t116, 10) {
                                                      for (output_cgra.s0.x, t119, 10) {
                                                        output_cgra.stencil(0, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(0, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(1, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(1, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(2, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(2, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(3, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(3, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(4, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(4, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(5, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(5, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(6, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(6, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(7, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(7, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(8, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(8, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(9, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(9, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(10, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(10, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(11, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(11, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(12, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(12, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(13, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(13, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(14, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(14, output_cgra.s0.x, output_cgra.s0.y)
                                                        output_cgra.stencil(15, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(15, output_cgra.s0.x, output_cgra.s0.y)
                                                      }
                                                    }
                                                    realize input_cgra.stencil([0, 4], [(output_glb.s0.x.x_glb*20), 21], [t117, 21]) {
                                                      produce input_cgra.stencil {
                                                        let t120 = (output_glb.s0.x.x_glb*20)
                                                        for (input_cgra.s0.y, t117, 21) {
                                                          for (input_cgra.s0.x, t120, 21) {
                                                            input_cgra.stencil(0, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(0, input_cgra.s0.x, input_cgra.s0.y)
                                                            input_cgra.stencil(1, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(1, input_cgra.s0.x, input_cgra.s0.y)
                                                            input_cgra.stencil(2, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(2, input_cgra.s0.x, input_cgra.s0.y)
                                                            input_cgra.stencil(3, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(3, input_cgra.s0.x, input_cgra.s0.y)
                                                          }
                                                        }
                                                      }
                                                      consume input_cgra.stencil {
                                                        realize kernel_cgra.stencil([0, 16], [0, 4], [0, 3], [0, 3]) {
                                                          produce kernel_cgra.stencil {
                                                            for (kernel_cgra.s0.y, 0, 3) {
                                                              for (kernel_cgra.s0.x, 0, 3) {
                                                                for (kernel_cgra.s0.z.z_cgra, 0, 4) {
                                                                  for (kernel_cgra.s0.w.w_cgra.w_cgra, 0, 4) {
                                                                    kernel_cgra.stencil((kernel_cgra.s0.w.w_cgra.w_cgra*4), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil((kernel_cgra.s0.w.w_cgra.w_cgra*4), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                                                    kernel_cgra.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 1), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 1), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                                                    kernel_cgra.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 2), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 2), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                                                    kernel_cgra.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 3), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 3), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          consume kernel_cgra.stencil {
                                                            let t121 = (output_glb.s0.x.x_glb*10)
                                                            for (output_cgra.s1.r$y, 0, 3) {
                                                              for (output_cgra.s1.r$x, 0, 3) {
                                                                for (output_cgra.s1.y, t116, 10) {
                                                                  let t122 = ((output_cgra.s1.y*2) + output_cgra.s1.r$y)
                                                                  for (output_cgra.s1.x, t121, 10) {
                                                                    output_cgra.stencil(0, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(0, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(0, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(0, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(0, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(0, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(1, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(1, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(1, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(1, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(1, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(1, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(2, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(2, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(2, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(2, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(2, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(2, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(3, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(3, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(3, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(3, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(3, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(3, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(4, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(4, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(4, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(4, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(4, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(4, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(5, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(5, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(5, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(5, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(5, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(5, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(6, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(6, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(6, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(6, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(6, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(6, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(7, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(7, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(7, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(7, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(7, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(7, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(8, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(8, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(8, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(8, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(8, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(8, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(9, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(9, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(9, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(9, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(9, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(9, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(10, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(10, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(10, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(10, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(10, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(10, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(11, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(11, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(11, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(11, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(11, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(11, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(12, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(12, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(12, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(12, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(12, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(12, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(13, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(13, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(13, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(13, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(13, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(13, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(14, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(14, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(14, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(14, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(14, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(14, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                    output_cgra.stencil(15, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(15, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(15, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + ((kernel_cgra.stencil(15, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122)) + (output_cgra.stencil(15, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(15, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), t122))))))
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  consume output_cgra.stencil {
                                                    let t123 = (output_glb.s0.x.x_glb*10)
                                                    for (output_glb.s0.y.y_cgra, 0, 10) {
                                                      let t124 = (output_glb.s0.y.y_cgra + t116)
                                                      for (output_glb.s0.x.x_cgra, 0, 10) {
                                                        let t125 = (output_glb.s0.x.x_cgra + t123)
                                                        for (output_glb.s0.w.w_cgra.w_cgra, 0, 4) {
                                                          output_glb.stencil((output_glb.s0.w.w_cgra.w_cgra*4), t125, t124) = max(min(output_cgra.stencil((output_glb.s0.w.w_cgra.w_cgra*4), t125, t124), 6.000000h), 0.000000h)
                                                          output_glb.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 1), t125, t124) = max(min(output_cgra.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 1), t125, t124), 6.000000h), 0.000000h)
                                                          output_glb.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 2), t125, t124) = max(min(output_cgra.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 2), t125, t124), 6.000000h), 0.000000h)
                                                          output_glb.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 3), t125, t124) = max(min(output_cgra.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 3), t125, t124), 6.000000h), 0.000000h)
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      consume output_glb.stencil {
                                        for (hw_output.s0.y.yi, 0, 50) {
                                          for (hw_output.s0.x.xi, 0, 50) {
                                            for (hw_output.s0.w.w, 0, 4) {
                                              hw_output.stencil((hw_output.s0.w.w*4), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil((hw_output.s0.w.w*4), hw_output.s0.x.xi, hw_output.s0.y.yi)
                                              hw_output.stencil(((hw_output.s0.w.w*4) + 1), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil(((hw_output.s0.w.w*4) + 1), hw_output.s0.x.xi, hw_output.s0.y.yi)
                                              hw_output.stencil(((hw_output.s0.w.w*4) + 2), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil(((hw_output.s0.w.w*4) + 2), hw_output.s0.x.xi, hw_output.s0.y.yi)
                                              hw_output.stencil(((hw_output.s0.w.w*4) + 3), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil(((hw_output.s0.w.w*4) + 3), hw_output.s0.x.xi, hw_output.s0.y.yi)
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  consume hw_output.stencil {
                    assert(((0 <= _halide_buffer_get_min(output.buffer, 0)) && ((_halide_buffer_get_extent(output.buffer, 0) + _halide_buffer_get_min(output.buffer, 0)) <= 16)), halide_error_explicit_bounds_too_small("w", "output", 0, 15, _halide_buffer_get_min(output.buffer, 0), ((_halide_buffer_get_extent(output.buffer, 0) + _halide_buffer_get_min(output.buffer, 0)) + -1)))
                    assert(((0 <= _halide_buffer_get_min(output.buffer, 2)) && ((_halide_buffer_get_extent(output.buffer, 2) + _halide_buffer_get_min(output.buffer, 2)) <= 50)), halide_error_explicit_bounds_too_small("y", "output", 0, 49, _halide_buffer_get_min(output.buffer, 2), ((_halide_buffer_get_extent(output.buffer, 2) + _halide_buffer_get_min(output.buffer, 2)) + -1)))
                    assert(((0 <= _halide_buffer_get_min(output.buffer, 1)) && ((_halide_buffer_get_extent(output.buffer, 1) + _halide_buffer_get_min(output.buffer, 1)) <= 50)), halide_error_explicit_bounds_too_small("x", "output", 0, 49, _halide_buffer_get_min(output.buffer, 1), ((_halide_buffer_get_extent(output.buffer, 1) + _halide_buffer_get_min(output.buffer, 1)) + -1)))
                    produce output {
                      for (output.s0.y, 0, 50) {
                        for (output.s0.x, 0, 50) {
                          for (output.s0.w, 0, 16) {
                            output[(((_halide_buffer_get_stride(output.buffer, 2)*output.s0.y) + (_halide_buffer_get_stride(output.buffer, 1)*output.s0.x)) + output.s0.w)] = uint16(reinterpret(float32, (uint32(reinterpret(uint16, hw_output.stencil(output.s0.w, output.s0.x, output.s0.y)))*(uint32)65536)))
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}


[INFO] Adding clockwork to function conv2D_fp_clockwork
[INFO] Module.compile(): clockwork_source_name = ./bin/conv2D_fp_clockwork.cpp
creating file from name: conv2D_fp_clockwork
bias_host.stencil input stencil has bounds: {[0, ((16 + 0) - 1)]}
 min: [0] extent: [16]
input_host.stencil input stencil has bounds: {[0, 3], [0, ((101 + 0) - 1)], [0, ((101 + 0) - 1)]}
 min: [0,0,0] extent: [4,101,101]
kernel_host.stencil input stencil has bounds: {[0, 15], [0, ((4 + 0) - 1)], [0, ((3 + 0) - 1)], [0, ((3 + 0) - 1)]}
 min: [0,0,0,0] extent: [16,4,3,3]
realize bias_glb.stencil([0, 16]) {
  produce bias_glb.stencil {
    for (bias_glb.s0.w.w, 0, 16) {
      bias_glb.stencil(bias_glb.s0.w.w) = bias_host.stencil(bias_glb.s0.w.w)
    }
  }
  consume bias_glb.stencil {
    realize input_glb.stencil([0, 4], [0, 181], [0, 181]) {
      produce input_glb.stencil {
        for (input_glb.s0.y, 0, 101) {
          for (input_glb.s0.x, 0, 101) {
            input_glb.stencil(0, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(0, input_glb.s0.x, input_glb.s0.y)
            input_glb.stencil(1, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(1, input_glb.s0.x, input_glb.s0.y)
            input_glb.stencil(2, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(2, input_glb.s0.x, input_glb.s0.y)
            input_glb.stencil(3, input_glb.s0.x, input_glb.s0.y) = input_host.stencil(3, input_glb.s0.x, input_glb.s0.y)
          }
        }
      }
      consume input_glb.stencil {
        realize kernel_glb.stencil([0, 16], [0, 4], [0, 3], [0, 3]) {
          produce kernel_glb.stencil {
            for (kernel_glb.s0.y, 0, 3) {
              for (kernel_glb.s0.x, 0, 3) {
                for (kernel_glb.s0.z, 0, 4) {
                  for (kernel_glb.s0.w.w, 0, 4) {
                    kernel_glb.stencil((kernel_glb.s0.w.w*4), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil((kernel_glb.s0.w.w*4), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                    kernel_glb.stencil(((kernel_glb.s0.w.w*4) + 1), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil(((kernel_glb.s0.w.w*4) + 1), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                    kernel_glb.stencil(((kernel_glb.s0.w.w*4) + 2), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil(((kernel_glb.s0.w.w*4) + 2), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                    kernel_glb.stencil(((kernel_glb.s0.w.w*4) + 3), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y) = kernel_host.stencil(((kernel_glb.s0.w.w*4) + 3), kernel_glb.s0.z, kernel_glb.s0.x, kernel_glb.s0.y)
                  }
                }
              }
            }
          }
          consume kernel_glb.stencil {
            realize output_glb.stencil([0, 16], [0, 50], [0, 50]) {
              produce output_glb.stencil {
                for (output_glb.s0.y.y_glb, 0, 5) {
                  for (output_glb.s0.x.x_glb, 0, 5) {
                    realize bias_cgra.stencil([0, 16], [(output_glb.s0.x.x_glb*10), 10], [(output_glb.s0.y.y_glb*10), 10]) {
                      produce bias_cgra.stencil {
                        for (bias_cgra.s0.y, (output_glb.s0.y.y_glb*10), 10) {
                          for (bias_cgra.s0.x, (output_glb.s0.x.x_glb*10), 10) {
                            for (bias_cgra.s0.w.w_cgra.w_cgra, 0, 16) {
                              bias_cgra.stencil(bias_cgra.s0.w.w_cgra.w_cgra, bias_cgra.s0.x, bias_cgra.s0.y) = bias_glb.stencil(bias_cgra.s0.w.w_cgra.w_cgra)
                            }
                          }
                        }
                      }
                      consume bias_cgra.stencil {
                        realize output_cgra.stencil([0, 16], [(output_glb.s0.x.x_glb*10), 10], [(output_glb.s0.y.y_glb*10), 10]) {
                          produce output_cgra.stencil {
                            for (output_cgra.s0.y, (output_glb.s0.y.y_glb*10), 10) {
                              for (output_cgra.s0.x, (output_glb.s0.x.x_glb*10), 10) {
                                output_cgra.stencil(0, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(0, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(1, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(1, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(2, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(2, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(3, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(3, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(4, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(4, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(5, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(5, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(6, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(6, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(7, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(7, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(8, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(8, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(9, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(9, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(10, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(10, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(11, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(11, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(12, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(12, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(13, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(13, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(14, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(14, output_cgra.s0.x, output_cgra.s0.y)
                                output_cgra.stencil(15, output_cgra.s0.x, output_cgra.s0.y) = bias_cgra.stencil(15, output_cgra.s0.x, output_cgra.s0.y)
                              }
                            }
                            realize input_cgra.stencil([0, 4], [(output_glb.s0.x.x_glb*20), 21], [(output_glb.s0.y.y_glb*20), 21]) {
                              produce input_cgra.stencil {
                                for (input_cgra.s0.y, (output_glb.s0.y.y_glb*20), 21) {
                                  for (input_cgra.s0.x, (output_glb.s0.x.x_glb*20), 21) {
                                    input_cgra.stencil(0, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(0, input_cgra.s0.x, input_cgra.s0.y)
                                    input_cgra.stencil(1, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(1, input_cgra.s0.x, input_cgra.s0.y)
                                    input_cgra.stencil(2, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(2, input_cgra.s0.x, input_cgra.s0.y)
                                    input_cgra.stencil(3, input_cgra.s0.x, input_cgra.s0.y) = input_glb.stencil(3, input_cgra.s0.x, input_cgra.s0.y)
                                  }
                                }
                              }
                              consume input_cgra.stencil {
                                realize kernel_cgra.stencil([0, 16], [0, 4], [0, 3], [0, 3]) {
                                  produce kernel_cgra.stencil {
                                    for (kernel_cgra.s0.y, 0, 3) {
                                      for (kernel_cgra.s0.x, 0, 3) {
                                        for (kernel_cgra.s0.z.z_cgra, 0, 4) {
                                          for (kernel_cgra.s0.w.w_cgra.w_cgra, 0, 4) {
                                            kernel_cgra.stencil((kernel_cgra.s0.w.w_cgra.w_cgra*4), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil((kernel_cgra.s0.w.w_cgra.w_cgra*4), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                            kernel_cgra.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 1), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 1), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                            kernel_cgra.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 2), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 2), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                            kernel_cgra.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 3), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y) = kernel_glb.stencil(((kernel_cgra.s0.w.w_cgra.w_cgra*4) + 3), kernel_cgra.s0.z.z_cgra, kernel_cgra.s0.x, kernel_cgra.s0.y)
                                          }
                                        }
                                      }
                                    }
                                  }
                                  consume kernel_cgra.stencil {
                                    for (output_cgra.s1.r$y, 0, 3) {
                                      for (output_cgra.s1.r$x, 0, 3) {
                                        for (output_cgra.s1.y, (output_glb.s0.y.y_glb*10), 10) {
                                          for (output_cgra.s1.x, (output_glb.s0.x.x_glb*10), 10) {
                                            output_cgra.stencil(0, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(0, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(0, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(0, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(0, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(0, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(1, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(1, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(1, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(1, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(1, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(1, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(2, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(2, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(2, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(2, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(2, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(2, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(3, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(3, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(3, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(3, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(3, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(3, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(4, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(4, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(4, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(4, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(4, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(4, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(5, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(5, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(5, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(5, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(5, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(5, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(6, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(6, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(6, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(6, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(6, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(6, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(7, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(7, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(7, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(7, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(7, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(7, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(8, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(8, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(8, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(8, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(8, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(8, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(9, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(9, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(9, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(9, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(9, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(9, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(10, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(10, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(10, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(10, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(10, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(10, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(11, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(11, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(11, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(11, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(11, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(11, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(12, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(12, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(12, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(12, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(12, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(12, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(13, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(13, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(13, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(13, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(13, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(13, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(14, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(14, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(14, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(14, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(14, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(14, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                            output_cgra.stencil(15, output_cgra.s1.x, output_cgra.s1.y) = ((kernel_cgra.stencil(15, 3, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(3, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(15, 2, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(2, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + ((kernel_cgra.stencil(15, 1, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(1, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y))) + (output_cgra.stencil(15, output_cgra.s1.x, output_cgra.s1.y) + (kernel_cgra.stencil(15, 0, output_cgra.s1.r$x, output_cgra.s1.r$y)*input_cgra.stencil(0, ((output_cgra.s1.x*2) + output_cgra.s1.r$x), ((output_cgra.s1.y*2) + output_cgra.s1.r$y)))))))
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          consume output_cgra.stencil {
                            for (output_glb.s0.y.y_cgra, 0, 10) {
                              for (output_glb.s0.x.x_cgra, 0, 10) {
                                for (output_glb.s0.w.w_cgra.w_cgra, 0, 4) {
                                  output_glb.stencil((output_glb.s0.w.w_cgra.w_cgra*4), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))) = max(min(output_cgra.stencil((output_glb.s0.w.w_cgra.w_cgra*4), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))), 6.000000h), 0.000000h)
                                  output_glb.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 1), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))) = max(min(output_cgra.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 1), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))), 6.000000h), 0.000000h)
                                  output_glb.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 2), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))) = max(min(output_cgra.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 2), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))), 6.000000h), 0.000000h)
                                  output_glb.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 3), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))) = max(min(output_cgra.stencil(((output_glb.s0.w.w_cgra.w_cgra*4) + 3), (output_glb.s0.x.x_cgra + (output_glb.s0.x.x_glb*10)), (output_glb.s0.y.y_cgra + (output_glb.s0.y.y_glb*10))), 6.000000h), 0.000000h)
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              consume output_glb.stencil {
                for (hw_output.s0.y.yi, 0, 50) {
                  for (hw_output.s0.x.xi, 0, 50) {
                    for (hw_output.s0.w.w, 0, 4) {
                      hw_output.stencil((hw_output.s0.w.w*4), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil((hw_output.s0.w.w*4), hw_output.s0.x.xi, hw_output.s0.y.yi)
                      hw_output.stencil(((hw_output.s0.w.w*4) + 1), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil(((hw_output.s0.w.w*4) + 1), hw_output.s0.x.xi, hw_output.s0.y.yi)
                      hw_output.stencil(((hw_output.s0.w.w*4) + 2), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil(((hw_output.s0.w.w*4) + 2), hw_output.s0.x.xi, hw_output.s0.y.yi)
                      hw_output.stencil(((hw_output.s0.w.w*4) + 3), hw_output.s0.x.xi, hw_output.s0.y.yi) = output_glb.stencil(((hw_output.s0.w.w*4) + 3), hw_output.s0.x.xi, hw_output.s0.y.yi)
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

xcel for .hw_output out of 1 xcels in conv2D_fp
shifting bias_glb.stencil by [0]
shifting input_glb.stencil by [0,0,0]
shifting kernel_glb.stencil by [0,0,0,0]
shifting output_glb.stencil by [0,0,0]
shifting bias_cgra.stencil by [0,(output_glb_s0_x_x_glb*10),(output_glb_s0_y_y_glb*10)]
shifting output_cgra.stencil by [0,(output_glb_s0_x_x_glb*10),(output_glb_s0_y_y_glb*10)]
shifting input_cgra.stencil by [0,(output_glb_s0_x_x_glb*20),(output_glb_s0_y_y_glb*20)]
shifting kernel_cgra.stencil by [0,0,0,0]
[INFO] Module.compile(): clockwork header file = ./bin/conv2D_fp_clockwork.h
creating file from name: conv2D_fp_clockwork
outputting clockwork target named conv2D_fp
printed codegen
printed execution header
Accelerator conv2D_fp:
  closure arg: bias_host.stencil
  closure arg: input_host.stencil
  closure arg: kernel_host.stencil
  closure arg: hw_output.stencil
num_buffers=4  ending with hw_output.stencil
buffer 0 named bias_host_stencil has type uint16
buffer 1 named input_host_stencil has type bfloat16
buffer 2 named kernel_host_stencil has type bfloat16
buffer 3 named hw_output_stencil has type bfloat16
printed execution cpp
(echo "//" `cat ./bin/halide_gen_args`) | cat >> ./bin/conv2D_fp_memory.cpp
g++ -std=c++17 -I/aha/clockwork -I/aha/clockwork/include -I/aha/clockwork/barvinok-0.41/isl/ -fPIC -c bin/clockwork_codegen.cpp -o bin/clockwork_codegen.o
g++ -std=c++17 -I/aha/clockwork -I/aha/clockwork/include -I/aha/clockwork/barvinok-0.41/isl/ -fPIC bin/clockwork_codegen.o -L/aha/clockwork/lib -L/aha/clockwork/barvinok-0.41/isl/ -Wl,-rpath,/aha/clockwork/lib -lclkwrk -lbarvinok -lisl -lntl -lgmp -lpolylibgmp -lpthread -lcoreir-float -lcoreir-float_DW -L /aha/coreir/lib -Wl,-rpath /aha/coreir/lib -lcoreir -lcoreirsim -lcoreir-commonlib -lcoreir-float -lcoreir-float_DW -o bin/clockwork_codegen
cd ./bin && LD_LIBRARY_PATH=/aha/clockwork/lib:/aha/coreir/lib \
./clockwork_codegen unopt 1>mem_cout 2> >(tee -a mem_cout >&2); \
EXIT_CODE=$?; cd ..; \exit $EXIT_CODE
g++ -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I/aha/clockwork  -c bin/unoptimized_conv2D_fp.cpp -o bin/unoptimized_conv2D_fp.o
In file included from bin/conv2D_fp_compute.h:3,
                 from bin/unoptimized_conv2D_fp.cpp:10:
/aha/Halide-to-Hardware/../clockwork/clockwork_standard_compute_units.h: In function ‘hw_uint<32> to_bits(const float&)’:
/aha/Halide-to-Hardware/../clockwork/clockwork_standard_compute_units.h:51:31: warning: cast from type ‘const float*’ to type ‘void*’ casts away qualifiers [-Wcast-qual]
   51 |   int* ip = (int*) ((void*)(&f));
      |                               ^
At global scope:
cc1plus: warning: unrecognized command line option ‘-Wno-unknown-warning-option’
g++ -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I/aha/clockwork  -c bin/clockwork_testscript.cpp -o bin/clockwork_testscript.o
In file included from bin/clockwork_testscript.cpp:1:
bin/clockwork_testscript.h: In function ‘uint16_t {anonymous}::float_to_bfloat16(float)’:
bin/clockwork_testscript.h:182:1: warning: no return statement in function returning non-void [-Wreturn-type]
  182 | }
      | ^
At global scope:
cc1plus: warning: unrecognized command line option ‘-Wno-unknown-warning-option’
make ./bin/process WITH_CLOCKWORK=1
make[1]: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
HALIDE_GEN_ARGS has not changed from 'in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1'

[COMPILE_INFO] building clockwork pipeline
g++ -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I/aha/clockwork -c bin/conv2D_fp_clockwork.cpp -o bin/conv2D_fp_clockwork.o

[COMPILE_INFO] building RDAI host runtime
g++ -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I/aha/clockwork -I/aha/Halide-to-Hardware/../rdai/host_runtimes/linux_no_cma/include -c /aha/Halide-to-Hardware/../rdai/host_runtimes/linux_no_cma/src/linux_no_cma.cpp -o bin/rdai_host-linux_no_cma.o

[COMPILE_INFO] building RDAI host runtime
g++ -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I/aha/clockwork -I/aha/Halide-to-Hardware/../rdai/host_runtimes/linux_no_cma/include -c /aha/Halide-to-Hardware/../rdai/host_runtimes/linux_no_cma/src/linux_no_cma_impl.cpp -o bin/rdai_host-linux_no_cma_impl.o

[COMPILE_INFO] building RDAI platform runtime
g++ -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I./bin -I/aha/clockwork -I/aha/Halide-to-Hardware/../rdai/platform_runtimes/clockwork_sim/include -c /aha/Halide-to-Hardware/../rdai/platform_runtimes/clockwork_sim/src/rdai_clockwork_platform.cpp -o bin/rdai_platform-rdai_clockwork_platform.o
In file included from /aha/Halide-to-Hardware/../rdai/platform_runtimes/clockwork_sim/src/rdai_clockwork_platform.cpp:21:
./bin/clockwork_testscript.h: In function ‘uint16_t {anonymous}::float_to_bfloat16(float)’:
./bin/clockwork_testscript.h:182:1: warning: no return statement in function returning non-void [-Wreturn-type]
  182 | }
      | ^
At global scope:
cc1plus: warning: unrecognized command line option ‘-Wno-unknown-warning-option’

[COMPILE_INFO] building Halide runtime
bin/conv2D_fp.generator -r halide_runtime -e o  target=host-x86-64-enable_ponds-bfloat_hardware -o ./bin
PROCESS_TARGETS_DEFINED changed to coreir= cpu= clockwork=1
g++ -I./bin -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I../../hw_support -Wall -I/aha/Halide-to-Hardware/../rdai/platform_runtimes/clockwork_sim/include -DC_TEST -Wno-unknown-pragmas -Wno-unused-label -Wno-uninitialized -Wno-literal-suffix -O3 process.cpp ../../hw_support/./bin/hardware_process_helper.o ../../hw_support/./bin/coreir_sim_plugins.o  ./bin/clockwork_testscript.o ./bin/conv2D_fp_clockwork.o ./bin/unoptimized_conv2D_fp.o ./bin/rdai_host-linux_no_cma.o ./bin/rdai_host-linux_no_cma_impl.o ./bin/rdai_platform-rdai_clockwork_platform.o ./bin/halide_runtime.o  -ldl -lpthread -lz -lcurses -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -lcoreir -lcoreir-commonlib -lcoreirsim -lcoreir-float -lcoreir-float_DW -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib -lcoreir-cgralib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -lcoreir-lakelib -lcoreir-lakelib -DVERBOSE=0 -lpng16  -ljpeg -I/usr/include/libpng16 -I/usr/include/libpng16/.. -no-pie  -DWITH_CLOCKWORK -o bin/process
process.cpp: In function ‘void saveHalideBufferToRawBigEndian(const Halide::Runtime::Buffer<short unsigned int>&, const string&)’:
process.cpp:84:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
   84 |     for (int i = 0; i < buffer.number_of_elements(); ++i) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
process.cpp: In lambda function:
process.cpp:117:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  117 |                 for (int i = 0; i < indices.size(); ++i) {
      |                                 ~~^~~~~~~~~~~~~~~~
process.cpp:118:51: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  118 |                     std::cerr << indices[i] << (i < indices.size() - 1 ? ", " : "");
      |                                                 ~~^~~~~~~~~~~~~~~~~~~~
At global scope:
cc1plus: warning: unrecognized command line option ‘-Wno-unknown-warning-option’
make[1]: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1 EXT=mat ./bin/process run clockwork input.png 
using inputs set within process.cpp
input has dims: 4x101x101
kernel has dims: 16x4x3x3
bias has dims: 16
output has dims: 16x50x50
Writing input_host_stencil.mat to bin folder
Writing kernel_host_stencil.mat to bin folder
Writing bias_host_stencil.raw to bin folder
Writing hw_output.mat to bin folder
Checking for GLB bank configuration...
USE_GLB_BANK_CONFIG = [RUN_INFO] found an RDAI platform
bin/conv2D_fp.generator -g conv2D_fp -o ./bin -f conv2D_fp target=host-x86-64-enable_ponds-bfloat_hardware  in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1 
Lowering after final simplification:
assert((reinterpret(uint64, output.buffer) != (uint64)0), halide_error_buffer_argument_is_null("output"))
assert((reinterpret(uint64, kernel.buffer) != (uint64)0), halide_error_buffer_argument_is_null("kernel"))
assert((reinterpret(uint64, input.buffer) != (uint64)0), halide_error_buffer_argument_is_null("input"))
assert((reinterpret(uint64, bias.buffer) != (uint64)0), halide_error_buffer_argument_is_null("bias"))
let bias = _halide_buffer_get_host(bias.buffer)
let bias.type = _halide_buffer_get_type(bias.buffer)
let bias.dimensions = _halide_buffer_get_dimensions(bias.buffer)
let bias.min.0 = _halide_buffer_get_min(bias.buffer, 0)
let bias.extent.0 = _halide_buffer_get_extent(bias.buffer, 0)
let bias.stride.0 = _halide_buffer_get_stride(bias.buffer, 0)
let input = _halide_buffer_get_host(input.buffer)
let input.type = _halide_buffer_get_type(input.buffer)
let input.dimensions = _halide_buffer_get_dimensions(input.buffer)
let input.min.0 = _halide_buffer_get_min(input.buffer, 0)
let input.extent.0 = _halide_buffer_get_extent(input.buffer, 0)
let input.stride.0 = _halide_buffer_get_stride(input.buffer, 0)
let input.min.1 = _halide_buffer_get_min(input.buffer, 1)
let input.extent.1 = _halide_buffer_get_extent(input.buffer, 1)
let input.stride.1 = _halide_buffer_get_stride(input.buffer, 1)
let input.min.2 = _halide_buffer_get_min(input.buffer, 2)
let input.extent.2 = _halide_buffer_get_extent(input.buffer, 2)
let input.stride.2 = _halide_buffer_get_stride(input.buffer, 2)
let kernel = _halide_buffer_get_host(kernel.buffer)
let kernel.type = _halide_buffer_get_type(kernel.buffer)
let kernel.dimensions = _halide_buffer_get_dimensions(kernel.buffer)
let kernel.min.0 = _halide_buffer_get_min(kernel.buffer, 0)
let kernel.extent.0 = _halide_buffer_get_extent(kernel.buffer, 0)
let kernel.stride.0 = _halide_buffer_get_stride(kernel.buffer, 0)
let kernel.min.1 = _halide_buffer_get_min(kernel.buffer, 1)
let kernel.extent.1 = _halide_buffer_get_extent(kernel.buffer, 1)
let kernel.stride.1 = _halide_buffer_get_stride(kernel.buffer, 1)
let kernel.min.2 = _halide_buffer_get_min(kernel.buffer, 2)
let kernel.extent.2 = _halide_buffer_get_extent(kernel.buffer, 2)
let kernel.stride.2 = _halide_buffer_get_stride(kernel.buffer, 2)
let kernel.min.3 = _halide_buffer_get_min(kernel.buffer, 3)
let kernel.extent.3 = _halide_buffer_get_extent(kernel.buffer, 3)
let kernel.stride.3 = _halide_buffer_get_stride(kernel.buffer, 3)
let output = _halide_buffer_get_host(output.buffer)
let output.type = _halide_buffer_get_type(output.buffer)
let output.dimensions = _halide_buffer_get_dimensions(output.buffer)
let output.min.0 = _halide_buffer_get_min(output.buffer, 0)
let output.extent.0 = _halide_buffer_get_extent(output.buffer, 0)
let output.stride.0 = _halide_buffer_get_stride(output.buffer, 0)
let output.min.1 = _halide_buffer_get_min(output.buffer, 1)
let output.extent.1 = _halide_buffer_get_extent(output.buffer, 1)
let output.stride.1 = _halide_buffer_get_stride(output.buffer, 1)
let output.min.2 = _halide_buffer_get_min(output.buffer, 2)
let output.extent.2 = _halide_buffer_get_extent(output.buffer, 2)
let output.stride.2 = _halide_buffer_get_stride(output.buffer, 2)
if (_halide_buffer_is_bounds_query(bias.buffer)) {
  _halide_buffer_init(bias.buffer, _halide_buffer_get_shape(bias.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 1, make_struct((halide_dimension_t *), output.min.0, output.extent.0, 1, 0), (uint64)0)
}
if (_halide_buffer_is_bounds_query(input.buffer)) {
  _halide_buffer_init(input.buffer, _halide_buffer_get_shape(input.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 3, make_struct((halide_dimension_t *), 0, 4, 1, 0, (output.min.1*2), ((output.extent.1*2) + 1), 4, 0, (output.min.2*2), ((output.extent.2*2) + 1), ((output.extent.1*8) + 4), 0), (uint64)0)
}
if (_halide_buffer_is_bounds_query(kernel.buffer)) {
  _halide_buffer_init(kernel.buffer, _halide_buffer_get_shape(kernel.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 4, make_struct((halide_dimension_t *), output.min.0, output.extent.0, 1, 0, 0, 4, output.extent.0, 0, 0, 3, (output.extent.0*4), 0, 0, 3, (output.extent.0*12), 0), (uint64)0)
}
if (_halide_buffer_is_bounds_query(output.buffer)) {
  _halide_buffer_init(output.buffer, _halide_buffer_get_shape(output.buffer), reinterpret((void *), (uint64)0), (uint64)0, reinterpret((halide_device_interface_t *), (uint64)0), 1, 16, 3, make_struct((halide_dimension_t *), output.min.0, output.extent.0, 1, 0, output.min.1, output.extent.1, output.extent.0, 0, output.min.2, output.extent.2, (output.extent.0*output.extent.1), 0), (uint64)0)
}
if (!(_halide_buffer_is_bounds_query(output.buffer) || (_halide_buffer_is_bounds_query(kernel.buffer) || (_halide_buffer_is_bounds_query(bias.buffer) || _halide_buffer_is_bounds_query(input.buffer))))) {
  assert((bias.type == (uint32)69633), halide_error_bad_type("Input buffer bias", bias.type, (uint32)69633))
  assert((bias.dimensions == 1), halide_error_bad_dimensions("Input buffer bias", bias.dimensions, 1))
  assert((input.type == (uint32)69633), halide_error_bad_type("Input buffer input", input.type, (uint32)69633))
  assert((input.dimensions == 3), halide_error_bad_dimensions("Input buffer input", input.dimensions, 3))
  assert((kernel.type == (uint32)69633), halide_error_bad_type("Input buffer kernel", kernel.type, (uint32)69633))
  assert((kernel.dimensions == 4), halide_error_bad_dimensions("Input buffer kernel", kernel.dimensions, 4))
  assert((output.type == (uint32)69633), halide_error_bad_type("Output buffer output", output.type, (uint32)69633))
  assert((output.dimensions == 3), halide_error_bad_dimensions("Output buffer output", output.dimensions, 3))
  assert(((bias.min.0 <= output.min.0) && ((output.extent.0 + output.min.0) <= (bias.extent.0 + bias.min.0))), halide_error_access_out_of_bounds("Input buffer bias", 0, output.min.0, ((output.extent.0 + output.min.0) + -1), bias.min.0, ((bias.extent.0 + bias.min.0) + -1)))
  assert((0 <= bias.extent.0), halide_error_buffer_extents_negative("Input buffer bias", 0, bias.extent.0))
  assert(((input.min.0 <= 0) && (4 <= (input.extent.0 + input.min.0))), halide_error_access_out_of_bounds("Input buffer input", 0, 0, 3, input.min.0, ((input.extent.0 + input.min.0) + -1)))
  assert((0 <= input.extent.0), halide_error_buffer_extents_negative("Input buffer input", 0, input.extent.0))
  assert(((input.min.1 <= (output.min.1*2)) && ((((output.extent.1 + output.min.1)*2) + 1) <= (input.extent.1 + input.min.1))), halide_error_access_out_of_bounds("Input buffer input", 1, (output.min.1*2), ((output.extent.1 + output.min.1)*2), input.min.1, ((input.extent.1 + input.min.1) + -1)))
  assert((0 <= input.extent.1), halide_error_buffer_extents_negative("Input buffer input", 1, input.extent.1))
  assert(((input.min.2 <= (output.min.2*2)) && ((((output.extent.2 + output.min.2)*2) + 1) <= (input.extent.2 + input.min.2))), halide_error_access_out_of_bounds("Input buffer input", 2, (output.min.2*2), ((output.extent.2 + output.min.2)*2), input.min.2, ((input.extent.2 + input.min.2) + -1)))
  assert((0 <= input.extent.2), halide_error_buffer_extents_negative("Input buffer input", 2, input.extent.2))
  assert(((kernel.min.0 <= output.min.0) && ((output.extent.0 + output.min.0) <= (kernel.extent.0 + kernel.min.0))), halide_error_access_out_of_bounds("Input buffer kernel", 0, output.min.0, ((output.extent.0 + output.min.0) + -1), kernel.min.0, ((kernel.extent.0 + kernel.min.0) + -1)))
  assert((0 <= kernel.extent.0), halide_error_buffer_extents_negative("Input buffer kernel", 0, kernel.extent.0))
  assert(((kernel.min.1 <= 0) && (4 <= (kernel.extent.1 + kernel.min.1))), halide_error_access_out_of_bounds("Input buffer kernel", 1, 0, 3, kernel.min.1, ((kernel.extent.1 + kernel.min.1) + -1)))
  assert((0 <= kernel.extent.1), halide_error_buffer_extents_negative("Input buffer kernel", 1, kernel.extent.1))
  assert(((kernel.min.2 <= 0) && (3 <= (kernel.extent.2 + kernel.min.2))), halide_error_access_out_of_bounds("Input buffer kernel", 2, 0, 2, kernel.min.2, ((kernel.extent.2 + kernel.min.2) + -1)))
  assert((0 <= kernel.extent.2), halide_error_buffer_extents_negative("Input buffer kernel", 2, kernel.extent.2))
  assert(((kernel.min.3 <= 0) && (3 <= (kernel.extent.3 + kernel.min.3))), halide_error_access_out_of_bounds("Input buffer kernel", 3, 0, 2, kernel.min.3, ((kernel.extent.3 + kernel.min.3) + -1)))
  assert((0 <= kernel.extent.3), halide_error_buffer_extents_negative("Input buffer kernel", 3, kernel.extent.3))
  assert((0 <= output.extent.0), halide_error_buffer_extents_negative("Output buffer output", 0, output.extent.0))
  assert((0 <= output.extent.1), halide_error_buffer_extents_negative("Output buffer output", 1, output.extent.1))
  assert((0 <= output.extent.2), halide_error_buffer_extents_negative("Output buffer output", 2, output.extent.2))
  assert((bias.stride.0 == 1), halide_error_constraint_violated("bias.stride.0", bias.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  assert((kernel.stride.0 == 1), halide_error_constraint_violated("kernel.stride.0", kernel.stride.0, "1", 1))
  assert((output.stride.0 == 1), halide_error_constraint_violated("output.stride.0", output.stride.0, "1", 1))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  let input.total_extent.2 = (input.total_extent.1*int64(input.extent.2))
  let kernel.total_extent.1 = (int64(kernel.extent.1)*int64(kernel.extent.0))
  let kernel.total_extent.2 = (kernel.total_extent.1*int64(kernel.extent.2))
  let kernel.total_extent.3 = (kernel.total_extent.2*int64(kernel.extent.3))
  let output.total_extent.1 = (int64(output.extent.1)*int64(output.extent.0))
  let output.total_extent.2 = (output.total_extent.1*int64(output.extent.2))
  assert((abs(int64(bias.extent.0)) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("bias", abs(int64(bias.extent.0)), (uint64)2147483647))
  assert((abs(int64(input.extent.0)) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs(int64(input.extent.0)), (uint64)2147483647))
  assert((abs((int64(input.extent.1)*int64(input.stride.1))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs((int64(input.extent.1)*int64(input.stride.1))), (uint64)2147483647))
  assert((input.total_extent.1 <= (int64)2147483647), halide_error_buffer_extents_too_large("input", input.total_extent.1, (int64)2147483647))
  assert((abs((int64(input.extent.2)*int64(input.stride.2))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("input", abs((int64(input.extent.2)*int64(input.stride.2))), (uint64)2147483647))
  assert((input.total_extent.2 <= (int64)2147483647), halide_error_buffer_extents_too_large("input", input.total_extent.2, (int64)2147483647))
  assert((abs(int64(kernel.extent.0)) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs(int64(kernel.extent.0)), (uint64)2147483647))
  assert((abs((int64(kernel.extent.1)*int64(kernel.stride.1))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs((int64(kernel.extent.1)*int64(kernel.stride.1))), (uint64)2147483647))
  assert((kernel.total_extent.1 <= (int64)2147483647), halide_error_buffer_extents_too_large("kernel", kernel.total_extent.1, (int64)2147483647))
  assert((abs((int64(kernel.extent.2)*int64(kernel.stride.2))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs((int64(kernel.extent.2)*int64(kernel.stride.2))), (uint64)2147483647))
  assert((kernel.total_extent.2 <= (int64)2147483647), halide_error_buffer_extents_too_large("kernel", kernel.total_extent.2, (int64)2147483647))
  assert((abs((int64(kernel.extent.3)*int64(kernel.stride.3))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("kernel", abs((int64(kernel.extent.3)*int64(kernel.stride.3))), (uint64)2147483647))
  assert((kernel.total_extent.3 <= (int64)2147483647), halide_error_buffer_extents_too_large("kernel", kernel.total_extent.3, (int64)2147483647))
  assert((abs(int64(output.extent.0)) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs(int64(output.extent.0)), (uint64)2147483647))
  assert((abs((int64(output.extent.1)*int64(output.stride.1))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs((int64(output.extent.1)*int64(output.stride.1))), (uint64)2147483647))
  assert((output.total_extent.1 <= (int64)2147483647), halide_error_buffer_extents_too_large("output", output.total_extent.1, (int64)2147483647))
  assert((abs((int64(output.extent.2)*int64(output.stride.2))) <= (uint64)2147483647), halide_error_buffer_allocation_too_large("output", abs((int64(output.extent.2)*int64(output.stride.2))), (uint64)2147483647))
  assert((output.total_extent.2 <= (int64)2147483647), halide_error_buffer_extents_too_large("output", output.total_extent.2, (int64)2147483647))
  assert((bias != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Input buffer bias"))
  assert((input != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Input buffer input"))
  assert((kernel != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Input buffer kernel"))
  assert((output != reinterpret((void *), (uint64)0)), halide_error_host_is_null("Output buffer output"))
  allocate output_cgra[uint16 * output.extent.0 * output.extent.1 * output.extent.2]
  produce output_cgra {
    for (output_cgra.s0.y, output.min.2, output.extent.2) {
      let t187 = (((output.extent.0*output.extent.1)*(output_cgra.s0.y - output.min.2)) - output.min.0)
      for (output_cgra.s0.x, output.min.1, output.extent.1) {
        let t188 = (((output_cgra.s0.x - output.min.1)*output.extent.0) + t187)
        for (output_cgra.s0.w, output.min.0, output.extent.0) {
          output_cgra[(output_cgra.s0.w + t188)] = (let t147 = reinterpret(uint32, float32(bias[(output_cgra.s0.w - bias.min.0)])) in uint16((bitwise_and((t147 + (uint32)32768), bitwise_not((uint32((((t147 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))
        }
      }
    }
    let t200 = (kernel.min.1*kernel.stride.1)
    let t201 = (kernel.min.3*kernel.stride.3)
    let t202 = (kernel.min.2*kernel.stride.2)
    let t203 = (kernel.stride.2 + kernel.stride.3)
    let t204 = (kernel.stride.2*2)
    let t197 = (((((2 - kernel.min.3)*kernel.stride.3) - t202) - t200) - kernel.min.0)
    let t194 = (((((1 - kernel.min.3)*kernel.stride.3) - t202) - t200) - kernel.min.0)
    let t199 = (((((t203*2) - t201) - t202) - t200) - kernel.min.0)
    let t193 = ((((t204 - t201) - t202) - t200) - kernel.min.0)
    let t198 = ((((((kernel.stride.3*2) + kernel.stride.2) - t201) - t202) - t200) - kernel.min.0)
    let t196 = (((((kernel.stride.3 + t204) - t201) - t202) - t200) - kernel.min.0)
    let t195 = ((((t203 - t201) - t202) - t200) - kernel.min.0)
    let t192 = ((((kernel.stride.2 - t201) - t202) - t200) - kernel.min.0)
    let t189 = (((t201 + t202) + t200) + kernel.min.0)
    let t190 = (((input.min.2*input.stride.2) + (input.min.1*input.stride.1)) + input.min.0)
    for (output_cgra.s1.y, output.min.2, output.extent.2) {
      let t209 = (output_cgra.s1.y*2)
      let t206 = (((output.extent.0*output.extent.1)*(output_cgra.s1.y - output.min.2)) - output.min.0)
      let t205 = (((input.stride.2*output_cgra.s1.y)*2) - t190)
      let t208 = (((t209 + 2)*input.stride.2) - t190)
      let t207 = (((t209 + 1)*input.stride.2) - t190)
      for (output_cgra.s1.x, output.min.1, output.extent.1) {
        let t220 = (output_cgra.s1.x*2)
        let t221 = ((t220 + 1)*input.stride.1)
        let t222 = ((t220 + 2)*input.stride.1)
        let t223 = ((input.stride.1*output_cgra.s1.x)*2)
        let t217 = (t208 + t223)
        let t214 = (t207 + t223)
        let t210 = (t205 + t223)
        let t211 = (((output_cgra.s1.x - output.min.1)*output.extent.0) + t206)
        let t219 = (t208 + t222)
        let t216 = (t207 + t222)
        let t213 = (t205 + t222)
        let t218 = (t208 + t221)
        let t215 = (t207 + t221)
        let t212 = (t205 + t221)
        for (output_cgra.s1.w, output.min.0, output.extent.0) {
          let t224 = (output_cgra.s1.w - t189)
          let t225 = (output_cgra.s1.w + t211)
          let t233 = (output_cgra.s1.w + t199)
          let t232 = (output_cgra.s1.w + t198)
          let t231 = (output_cgra.s1.w + t197)
          let t230 = (output_cgra.s1.w + t196)
          let t229 = (output_cgra.s1.w + t195)
          let t228 = (output_cgra.s1.w + t194)
          let t227 = (output_cgra.s1.w + t193)
          let t226 = (output_cgra.s1.w + t192)
          for (output_cgra.s1.r$z, 0, 4) {
            output_cgra[t225] = (let t148 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t224)])) in (let t149 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t210)])) in (let t150 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t148 + (uint32)32768), bitwise_not((uint32((((t148 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t149 + (uint32)32768), bitwise_not((uint32((((t149 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t151 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t150 + (uint32)32768), bitwise_not((uint32((((t150 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t151 + (uint32)32768), bitwise_not((uint32((((t151 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t152 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t226)])) in (let t153 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t212)])) in (let t154 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t152 + (uint32)32768), bitwise_not((uint32((((t152 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t153 + (uint32)32768), bitwise_not((uint32((((t153 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t155 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t154 + (uint32)32768), bitwise_not((uint32((((t154 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t155 + (uint32)32768), bitwise_not((uint32((((t155 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t156 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t227)])) in (let t157 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t213)])) in (let t158 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t156 + (uint32)32768), bitwise_not((uint32((((t156 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t157 + (uint32)32768), bitwise_not((uint32((((t157 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t159 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t158 + (uint32)32768), bitwise_not((uint32((((t158 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t159 + (uint32)32768), bitwise_not((uint32((((t159 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t160 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t228)])) in (let t161 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t214)])) in (let t162 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t160 + (uint32)32768), bitwise_not((uint32((((t160 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t161 + (uint32)32768), bitwise_not((uint32((((t161 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t163 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t162 + (uint32)32768), bitwise_not((uint32((((t162 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t163 + (uint32)32768), bitwise_not((uint32((((t163 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t164 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t229)])) in (let t165 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t215)])) in (let t166 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t164 + (uint32)32768), bitwise_not((uint32((((t164 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t165 + (uint32)32768), bitwise_not((uint32((((t165 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t167 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t166 + (uint32)32768), bitwise_not((uint32((((t166 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t167 + (uint32)32768), bitwise_not((uint32((((t167 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t168 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t230)])) in (let t169 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t216)])) in (let t170 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t168 + (uint32)32768), bitwise_not((uint32((((t168 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t169 + (uint32)32768), bitwise_not((uint32((((t169 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t171 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t170 + (uint32)32768), bitwise_not((uint32((((t170 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t171 + (uint32)32768), bitwise_not((uint32((((t171 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t172 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t231)])) in (let t173 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t217)])) in (let t174 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t172 + (uint32)32768), bitwise_not((uint32((((t172 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t173 + (uint32)32768), bitwise_not((uint32((((t173 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t175 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t174 + (uint32)32768), bitwise_not((uint32((((t174 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t175 + (uint32)32768), bitwise_not((uint32((((t175 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t176 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t232)])) in (let t177 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t218)])) in (let t178 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t176 + (uint32)32768), bitwise_not((uint32((((t176 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t177 + (uint32)32768), bitwise_not((uint32((((t177 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t179 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t178 + (uint32)32768), bitwise_not((uint32((((t178 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t179 + (uint32)32768), bitwise_not((uint32((((t179 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
            output_cgra[t225] = (let t180 = reinterpret(uint32, float32(kernel[((kernel.stride.1*output_cgra.s1.r$z) + t233)])) in (let t181 = reinterpret(uint32, float32(input[(output_cgra.s1.r$z + t219)])) in (let t182 = reinterpret(uint32, (reinterpret(float32, (uint32(uint16((bitwise_and((t180 + (uint32)32768), bitwise_not((uint32((((t180 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536))*reinterpret(float32, (uint32(uint16((bitwise_and((t181 + (uint32)32768), bitwise_not((uint32((((t181 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in (let t183 = reinterpret(uint32, (reinterpret(float32, (uint32(output_cgra[t225])*(uint32)65536)) + reinterpret(float32, (uint32(uint16((bitwise_and((t182 + (uint32)32768), bitwise_not((uint32((((t182 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))) in uint16((bitwise_and((t183 + (uint32)32768), bitwise_not((uint32((((t183 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536))))))
          }
        }
      }
    }
  }
  produce output {
    consume output_cgra {
      let t235 = (((output.min.2*output.stride.2) + (output.min.1*output.stride.1)) + output.min.0)
      for (output.s0.y, output.min.2, output.extent.2) {
        let t236 = (((output.extent.0*output.extent.1)*(output.s0.y - output.min.2)) - output.min.0)
        let t237 = ((output.s0.y*output.stride.2) - t235)
        for (output.s0.x, output.min.1, output.extent.1) {
          let t238 = (((output.s0.x - output.min.1)*output.extent.0) + t236)
          let t239 = ((output.s0.x*output.stride.1) + t237)
          for (output.s0.w, output.min.0, output.extent.0) {
            output[(output.s0.w + t239)] = (let t184 = reinterpret(uint32, min(reinterpret(float32, (uint32(output_cgra[(output.s0.w + t238)])*(uint32)65536)), 6.000000f)) in (let t185 = reinterpret(uint32, max(reinterpret(float32, (uint32(uint16((bitwise_and((t184 + (uint32)32768), bitwise_not((uint32((((t184 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)), 0.000000f)) in uint16(reinterpret(float32, (uint32(uint16((bitwise_and((t185 + (uint32)32768), bitwise_not((uint32((((t185 + (uint32)32768) % (uint32)65536) == (uint32)0))*(uint32)65536)))/(uint32)65536)))*(uint32)65536)))))
          }
        }
      }
    }
  }
  free output_cgra
}


Module.compile(): c_header_name ./bin/conv2D_fp.h called conv2D_fp
creating file from name: conv2D_fp
make ./bin/process WITH_CPU=1
make[1]: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
HALIDE_GEN_ARGS has not changed from 'in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1'
PROCESS_TARGETS_DEFINED changed to coreir= cpu=1 clockwork=1
g++ -I./bin -std=c++17 -I /aha/Halide-to-Hardware/distrib/include/ -I /aha/Halide-to-Hardware/distrib/tools/  -Wno-unused-function -Wcast-qual -Wignored-qualifiers -Wno-comment -Wsign-compare -Wno-unknown-warning-option -Wno-psabi -fno-rtti -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I /aha/coreir/include -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -I /aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib   -I/aha/Halide-to-Hardware/../rdai/rdai_api -I../../hw_support -Wall -I/aha/Halide-to-Hardware/../rdai/platform_runtimes/clockwork_sim/include -DC_TEST -Wno-unknown-pragmas -Wno-unused-label -Wno-uninitialized -Wno-literal-suffix -O3 process.cpp ../../hw_support/./bin/hardware_process_helper.o ../../hw_support/./bin/coreir_sim_plugins.o  ./bin/conv2D_fp.a ./bin/clockwork_testscript.o ./bin/conv2D_fp_clockwork.o ./bin/unoptimized_conv2D_fp.o ./bin/rdai_host-linux_no_cma.o ./bin/rdai_host-linux_no_cma_impl.o ./bin/rdai_platform-rdai_clockwork_platform.o ./bin/halide_runtime.o  -ldl -lpthread -lz -lcurses -L/aha/coreir/lib -Wl,-rpath,/aha/coreir/lib -lcoreir -lcoreir-commonlib -lcoreirsim -lcoreir-float -lcoreir-float_DW -L/aha/Halide-to-Hardware/../clockwork/lib -Wl,-rpath,/aha/Halide-to-Hardware/../clockwork/lib -lcoreir-cgralib -I /aha/Halide-to-Hardware/../BufferMapping/cfunc/include -L/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -Wl,-rpath,/aha/Halide-to-Hardware/../BufferMapping/cfunc/bin -lcoreir-lakelib -lcoreir-lakelib -DVERBOSE=0 -lpng16  -ljpeg -I/usr/include/libpng16 -I/usr/include/libpng16/.. -no-pie  -DWITH_CPU -DWITH_CLOCKWORK -o bin/process
process.cpp: In function ‘void saveHalideBufferToRawBigEndian(const Halide::Runtime::Buffer<short unsigned int>&, const string&)’:
process.cpp:84:23: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
   84 |     for (int i = 0; i < buffer.number_of_elements(); ++i) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
process.cpp: In lambda function:
process.cpp:117:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  117 |                 for (int i = 0; i < indices.size(); ++i) {
      |                                 ~~^~~~~~~~~~~~~~~~
process.cpp:118:51: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<int>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  118 |                     std::cerr << indices[i] << (i < indices.size() - 1 ? ", " : "");
      |                                                 ~~^~~~~~~~~~~~~~~~~~~~
At global scope:
cc1plus: warning: unrecognized command line option ‘-Wno-unknown-warning-option’
make[1]: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1 EXT=mat ./bin/process run cpu input.png 
using inputs set within process.cpp
input has dims: 4x101x101
kernel has dims: 16x4x3x3
bias has dims: 16
output has dims: 16x50x50
Writing input_host_stencil.mat to bin folder
Writing kernel_host_stencil.mat to bin folder
Writing bias_host_stencil.raw to bin folder
Writing hw_output.mat to bin folder
Checking for GLB bank configuration...
USE_GLB_BANK_CONFIG = in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1 ./bin/process compare ./bin/output_cpu.mat ./bin/output_clockwork.mat; \
EXIT_CODE=$?; \
echo $EXIT_CODE; \
if [[ $EXIT_CODE = 0 ]]; then \
    cp ./bin/output_clockwork.mat ./bin/output.mat; \
    (exit $EXIT_CODE); \
else \
    (exit $EXIT_CODE);  \
fi
using inputs set within process.cpp
input has dims: 4x101x101
kernel has dims: 16x4x3x3
bias has dims: 16
output has dims: 16x50x50
Writing input_host_stencil.mat to bin folder
Writing kernel_host_stencil.mat to bin folder
Writing bias_host_stencil.raw to bin folder
Writing hw_output.mat to bin folder
Checking for GLB bank configuration...
USE_GLB_BANK_CONFIG = 0
if [ -f cgra_config.json ]; then \
	cp cgra_config.json bin/cgra_config.json; \
else \
	cp ../../hw_support/default_config.json bin/cgra_config.json; \
fi
python3 ../../hw_support/interleave_cgrainput.py ./bin/cgra_config.json bin/input_cgra.pgm
make[1]: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
if [ "mat" == "png" ]; then \
  ../../hw_support/steveconvert.csh ./bin/input_host_stencil.png ./bin/input_host_stencil.raw; \
elif [ "mat" == "mat" ]; then \
  python ../../hw_support/mat2raw.py ./bin/input_host_stencil.mat ./bin/input_host_stencil.raw; \
else \
  echo "Unsupported file format: mat"; \
  fi
[mat2raw] Converting ./bin/input_host_stencil.mat to ./bin/input_host_stencil.raw...
[mat2raw] Conversion of ./bin/input_host_stencil.raw Complete.
make[1]: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
make[1]: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
if [ "mat" == "png" ]; then \
  ../../hw_support/steveconvert.csh ./bin/kernel_host_stencil.png ./bin/kernel_host_stencil.raw; \
elif [ "mat" == "mat" ]; then \
  python ../../hw_support/mat2raw.py ./bin/kernel_host_stencil.mat ./bin/kernel_host_stencil.raw; \
else \
  echo "Unsupported file format: mat"; \
  fi
[mat2raw] Converting ./bin/kernel_host_stencil.mat to ./bin/kernel_host_stencil.raw...
[mat2raw] Conversion of ./bin/kernel_host_stencil.raw Complete.
make[1]: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
make[1]: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
make[1]: 'bin/bias_host_stencil.raw' is up to date.
make[1]: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
Writing file length 53824 with bw=16 and 3 bytes/cycles
Wrote to input_cgra.pgm
make ./bin/hw_output.raw
make[1]: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
if [ "mat" == "png" ]; then \
  ../../hw_support/steveconvert.csh ./bin/hw_output.png ./bin/hw_output.raw; \
elif [ "mat" == "mat" ]; then \
  python ../../hw_support/mat2raw.py ./bin/hw_output.mat ./bin/hw_output.raw; \
else \
  echo "Unsupported file format: mat"; \
  fi
[mat2raw] Converting ./bin/hw_output.mat to ./bin/hw_output.raw...
[mat2raw] Conversion of ./bin/hw_output.raw Complete.
make[1]: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
cat ./bin/hw_output_header.txt > bin/output_cgra_comparison.pgm
cat ./bin/hw_output.raw >> bin/output_cgra_comparison.pgm
make: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
make: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
HALIDE_GEN_ARGS has not changed from 'in_img=101 ksize=3 stride=2 n_ic=4 n_oc=16 k_ic=4 k_oc=16 glb_i=4 glb_k=4 glb_o=4 relu6=1'
python /aha/MetaMapper/scripts/map_app.py ./bin/conv2D_fp_compute.json 
/tmp/tmpd9kvuptt.json
Loading sle_pipelined  /tmp/tmpwowhsi9g.json
Loading commonlib.mult_middle  Loading ucrop_pipelined  /tmp/tmpgg07epr0.json
Loading smin_pipelined  /tmp/tmpca_5v24j.json
Loading fp_gt  Loading shl_pipelined  /tmp/tmpo2dnsgy6.json
Loading add_pipelined  /tmp/tmpkqtsggmr.json
Loading neq_pipelined  /tmp/tmpconaf54y.json
Loading sub_pipelined  /tmp/tmpxx714tm6.json
Loading slt_pipelined  /tmp/tmp5tkey7i7.json
Loading utaa_s1_pipelined  /tmp/tmpz0i7w7jl.json
Loading utaa_s0_pipelined  /tmp/tmpnnf48_cb.json
Loading umax_pipelined  /tmp/tmp5kywvi8w.json
Loading or__pipelined  /tmp/tmpl7v53lzv.json
Loading scrop_pipelined  /tmp/tmpo65s5y2u.json
Loading umulshr_s0_pipelined  /tmp/tmpx51bt6w5.json
Loading uge_pipelined  /tmp/tmplswa7r_2.json
Loading bit_and_pipelined  /tmp/tmpezsvfxc_.json
Loading eq_pipelined  /tmp/tmptffvra6l.json
Loading bit_const_pipelined  /tmp/tmpr52n0a1a.json
Loading stsa_s0_pipelined  /tmp/tmpc0yfp69d.json
Loading utsa_s0_pipelined  /tmp/tmpuk5jcf3i.json
Loading mux_pipelined  /tmp/tmpkn_w9xdp.json
Loading mac_pipelined  /tmp/tmpc9bmbvxs.json
Loading stas_s0_pipelined  /tmp/tmp72quhg1s.json
Loading lshr_pipelined  /tmp/tmpqyz5cw_k.json
Loading sgt_pipelined  /tmp/tmp9h6prp7m.json
Loading fp_getfint  Loading ugt_pipelined  /tmp/tmpgvc4t110.json
Loading utss_s0_pipelined  /tmp/tmp1syhy5vv.json
Loading mulsub_s0_pipelined  /tmp/tmpx8kz02_f.json
Loading bit_xor_pipelined  /tmp/tmpq0mm9i70.json
Loading mul_pipelined  /tmp/tmpbpw7gwij.json
Loading ashr_pipelined  /tmp/tmpngzuvt44.json
Loading and__pipelined  /tmp/tmpdintxdn0.json
Loading ule_pipelined  /tmp/tmp_vjrzyc5.json
Loading fp_getffrac  Loading utas_s0_pipelined  /tmp/tmpxo1rr6lm.json
Loading float.mux  Loading bit_or_pipelined  /tmp/tmpkphxsf8u.json
Loading fp_lt  Loading fp_cnvint2f  Loading sge_pipelined  /tmp/tmp1l9eu5_9.json
Loading smax_pipelined  /tmp/tmpgtdzpin6.json
Loading fp_subexp  Loading smulshr_s0_pipelined  /tmp/tmpl7suydar.json
Loading float_DW.fp_add  Loading staa_s0_pipelined  /tmp/tmpc9e7n6pe.json
Loading fp_cnvexp2f  Loading float.sub  Loading float_DW.fp_mul  Loading stss_s0_pipelined  /tmp/tmp1idd4q2i.json
Loading bit_not_pipelined  /tmp/tmp4lozkl13.json
Loading commonlib.abs  Loading fp_addiexp  Loading ult_pipelined  /tmp/tmpftnmkk9m.json
Loading umin_pipelined  /tmp/tmplj8jqa56.json
Loading fp_getmant  Loading staa_s1_pipelined  /tmp/tmp18h0fze_.json
Loading muladd_s1_pipelined  /tmp/tmpei_08m81.json
Loading const_pipelined  /tmp/tmpu_gfl72d.json
Loading muladd_s0_pipelined  /tmp/tmps72pp2gm.json
Loading tadd_pipelined  /tmp/tmpv2zml503.json
Mapping kernel hcompute_bias_cgra_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_bias_glb_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_hw_output_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_hw_output_stencil_1
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_hw_output_stencil_2
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_hw_output_stencil_3
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_cgra_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_cgra_stencil_1
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_cgra_stencil_2
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_cgra_stencil_3
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_glb_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_glb_stencil_1
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_glb_stencil_2
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_input_glb_stencil_3
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_cgra_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_cgra_stencil_1
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_cgra_stencil_2
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_cgra_stencil_3
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_glb_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_glb_stencil_1
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_glb_stencil_2
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_kernel_glb_stencil_3
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_1
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_10
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_11
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_12
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_13
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_14
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_15
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_16
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_17
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_18
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_19
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_2
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_20
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_21
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_22
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_23
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_24
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_25
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_26
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_27
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_28
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_29
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_3
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_30
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_31
	Used 8 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_4
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_5
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_6
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_7
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_8
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_cgra_stencil_9
	Used 0 PEs
	Added 0 during branch delay matching
Mapping kernel hcompute_output_glb_stencil
	Used 6 PEs
		Incorrect node delay: Select<res> {1, 2}
		break Select<res> global.PE
		Incorrect node delay: Select<0> {3, 4}
		break Select<0> global.PE
	Added 2 during branch delay matching
Mapping kernel hcompute_output_glb_stencil_1
	Used 6 PEs
		Incorrect node delay: Select<res> {1, 2}
		break Select<res> global.PE
		Incorrect node delay: Select<0> {3, 4}
		break Select<0> global.PE
	Added 2 during branch delay matching
Mapping kernel hcompute_output_glb_stencil_2
	Used 6 PEs
		Incorrect node delay: Select<res> {1, 2}
		break Select<res> global.PE
		Incorrect node delay: Select<0> {3, 4}
		break Select<0> global.PE
	Added 2 during branch delay matching
Mapping kernel hcompute_output_glb_stencil_3
	Used 6 PEs
		Incorrect node delay: Select<res> {1, 2}
		break Select<res> global.PE
		Incorrect node delay: Select<0> {3, 4}
		break Select<0> global.PE
	Added 2 during branch delay matching

[92mAll compute kernels passed formal checks[0m
Total num PEs used: 152

Total num regs inserted: 8
saving to ./bin/conv2D_fp_compute_mapped.json
sed -i -e 's/_mapped//g' ./bin/conv2D_fp_compute_mapped.json
cp /aha/MetaMapper/libs/*_header.json ./bin/ && cp /aha/MetaMapper/libs/*_header.json /aha/clockwork/ && cp /aha/MetaMapper/libs/*_header.json /aha/MetaMapper/../garnet/headers/ 
cd ./bin && \
CLKWRK_PATH=/aha/clockwork LD_LIBRARY_PATH=/aha/clockwork/lib:/aha/coreir/lib LAKE_PATH=/aha/lake LAKE_CONTROLLERS=/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin LAKE_STREAM=./bin COREIR_PATH=/aha/coreir \
./clockwork_codegen compile_mem_use_metamapper 1>mem_cout 2> >(tee -a mem_cout >&2); \
EXIT_CODE=$?; rm unoptimized_conv2D_fp*; cd ..; exit $EXIT_CODE
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
cp ./bin/map_result/conv2D_fp/conv2D_fp_to_metamapper.json ./bin/design_top.json
make: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
Failed to import libraries for results parsing.  Capabilities may be limited.
Generating LALR tables
WARNING: 183 shift/reduce conflicts
garnet_PE.json
intersect_unit
FOUND BULK
crddrop
FOUND BULK
crdhold
FOUND BULK
PE_onyx
FOUND BULK
Repeat
FOUND BULK
RepeatSignalGenerator
FOUND BULK
reg_cr
FOUND BULK
INPUTS DICT
{17: [{'intersect_unit_flat': 'coord_in_0_f_'}, {'intersect_unit_flat': 'coord_in_1_f_'}, {'intersect_unit_flat': 'pos_in_0_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}]}
INPUTS DICT
{17: [{'intersect_unit_flat': 'coord_in_0_f_', 'crddrop_flat': 'cmrg_coord_in_0_f_'}, {'intersect_unit_flat': 'coord_in_1_f_', 'crddrop_flat': 'cmrg_coord_in_1_f_'}, {'intersect_unit_flat': 'pos_in_0_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}]}
INPUTS DICT
{17: [{'intersect_unit_flat': 'coord_in_0_f_', 'crddrop_flat': 'cmrg_coord_in_0_f_', 'crdhold_flat': 'cmrg_coord_in_0_f_'}, {'intersect_unit_flat': 'coord_in_1_f_', 'crddrop_flat': 'cmrg_coord_in_1_f_', 'crdhold_flat': 'cmrg_coord_in_1_f_'}, {'intersect_unit_flat': 'pos_in_0_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}]}
INPUTS DICT
{17: [{'intersect_unit_flat': 'coord_in_0_f_', 'crddrop_flat': 'cmrg_coord_in_0_f_', 'crdhold_flat': 'cmrg_coord_in_0_f_', 'PE_onyx_flat': 'data0_f_'}, {'intersect_unit_flat': 'coord_in_1_f_', 'crddrop_flat': 'cmrg_coord_in_1_f_', 'crdhold_flat': 'cmrg_coord_in_1_f_', 'PE_onyx_flat': 'data1_f_'}, {'intersect_unit_flat': 'pos_in_0_f_', 'PE_onyx_flat': 'data2_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}], 1: [{'PE_onyx_flat': 'bit0_f_'}, {'PE_onyx_flat': 'bit1_f_'}, {'PE_onyx_flat': 'bit2_f_'}]}
INPUTS DICT
{17: [{'intersect_unit_flat': 'coord_in_0_f_', 'crddrop_flat': 'cmrg_coord_in_0_f_', 'crdhold_flat': 'cmrg_coord_in_0_f_', 'PE_onyx_flat': 'data0_f_', 'Repeat_flat': 'proc_data_in_f_'}, {'intersect_unit_flat': 'coord_in_1_f_', 'crddrop_flat': 'cmrg_coord_in_1_f_', 'crdhold_flat': 'cmrg_coord_in_1_f_', 'PE_onyx_flat': 'data1_f_', 'Repeat_flat': 'repsig_data_in_f_'}, {'intersect_unit_flat': 'pos_in_0_f_', 'PE_onyx_flat': 'data2_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}], 1: [{'PE_onyx_flat': 'bit0_f_'}, {'PE_onyx_flat': 'bit1_f_'}, {'PE_onyx_flat': 'bit2_f_'}]}
INPUTS DICT
{17: [{'intersect_unit_flat': 'coord_in_0_f_', 'crddrop_flat': 'cmrg_coord_in_0_f_', 'crdhold_flat': 'cmrg_coord_in_0_f_', 'PE_onyx_flat': 'data0_f_', 'Repeat_flat': 'proc_data_in_f_', 'RepeatSignalGenerator_flat': 'base_data_in_f_'}, {'intersect_unit_flat': 'coord_in_1_f_', 'crddrop_flat': 'cmrg_coord_in_1_f_', 'crdhold_flat': 'cmrg_coord_in_1_f_', 'PE_onyx_flat': 'data1_f_', 'Repeat_flat': 'repsig_data_in_f_'}, {'intersect_unit_flat': 'pos_in_0_f_', 'PE_onyx_flat': 'data2_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}], 1: [{'PE_onyx_flat': 'bit0_f_'}, {'PE_onyx_flat': 'bit1_f_'}, {'PE_onyx_flat': 'bit2_f_'}]}
INPUTS DICT
{17: [{'intersect_unit_flat': 'coord_in_0_f_', 'crddrop_flat': 'cmrg_coord_in_0_f_', 'crdhold_flat': 'cmrg_coord_in_0_f_', 'PE_onyx_flat': 'data0_f_', 'Repeat_flat': 'proc_data_in_f_', 'RepeatSignalGenerator_flat': 'base_data_in_f_', 'reg_cr_flat': 'data_in_f_'}, {'intersect_unit_flat': 'coord_in_1_f_', 'crddrop_flat': 'cmrg_coord_in_1_f_', 'crdhold_flat': 'cmrg_coord_in_1_f_', 'PE_onyx_flat': 'data1_f_', 'Repeat_flat': 'repsig_data_in_f_'}, {'intersect_unit_flat': 'pos_in_0_f_', 'PE_onyx_flat': 'data2_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}], 1: [{'PE_onyx_flat': 'bit0_f_'}, {'PE_onyx_flat': 'bit1_f_'}, {'PE_onyx_flat': 'bit2_f_'}]}
[(~full, 0), (~full, 1), (~full, 2), (PE_input_width_17_num_0_dense ? 1'h1: ~full, 3), (~full, 4), (~full, 5), (~full, 6)]
[(~full, 0), (~full, 1), (~full, 2), (PE_input_width_17_num_1_dense ? 1'h1: ~full, 3), (~full, 4)]
[(~full, 0), (1'h1, 3)]
[(~full, 0)]
[(~empty, 0), (~empty, 1), (~empty, 2), (PE_output_width_17_num_0_dense ? 1'h1: ~empty, 3), (~empty, 4), (~empty, 5), (~empty, 6)]
[(~empty, 0), (~empty, 1), (~empty, 2)]
[(~empty, 0)]
=====MEMORY TILE BUILDER=====
===CONTROLLERS===
[<lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bc7d3f10>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bcb48b50>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bc54dac0>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bc54d6d0>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bc54df70>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bc54d220>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bc54dca0>]
===INPUTS===
1: [{'PE_onyx_flat': 'bit0_f_'}, {'PE_onyx_flat': 'bit1_f_'}, {'PE_onyx_flat': 'bit2_f_'}]
17: [{'intersect_unit_flat': 'coord_in_0_f_', 'crddrop_flat': 'cmrg_coord_in_0_f_', 'crdhold_flat': 'cmrg_coord_in_0_f_', 'PE_onyx_flat': 'data0_f_', 'Repeat_flat': 'proc_data_in_f_', 'RepeatSignalGenerator_flat': 'base_data_in_f_', 'reg_cr_flat': 'data_in_f_'}, {'intersect_unit_flat': 'coord_in_1_f_', 'crddrop_flat': 'cmrg_coord_in_1_f_', 'crdhold_flat': 'cmrg_coord_in_1_f_', 'PE_onyx_flat': 'data1_f_', 'Repeat_flat': 'repsig_data_in_f_'}, {'intersect_unit_flat': 'pos_in_0_f_', 'PE_onyx_flat': 'data2_f_'}, {'intersect_unit_flat': 'pos_in_1_f_'}]
===OUTPUTS===
1: [{'PE_onyx_flat': 'res_p_f_'}]
17: [{'intersect_unit_flat': 'coord_out_f_', 'crddrop_flat': 'cmrg_coord_out_0_f_', 'crdhold_flat': 'cmrg_coord_out_0_f_', 'PE_onyx_flat': 'res_f_', 'Repeat_flat': 'ref_data_out_f_', 'RepeatSignalGenerator_flat': 'repsig_data_out_f_', 'reg_cr_flat': 'data_out_f_'}, {'intersect_unit_flat': 'pos_out_0_f_', 'crddrop_flat': 'cmrg_coord_out_1_f_', 'crdhold_flat': 'cmrg_coord_out_1_f_'}, {'intersect_unit_flat': 'pos_out_1_f_'}]
===MEMPORTS===
BANK: 0	 PORT: 0
Variable: set_once_popped_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: already_pushed_repsig_eos_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: seen_root_eos_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: base_data_seen has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crdhold.py:254[0m
[92m         ####################[0m
[92m [0m
[91m>        self._base_data_seen = self.var("base_data_seen", 1)[0m
[92m         self.wire(self._base_data_seen, self._base_infifo_in_valid & ~self._base_infifo_in_eos)[0m
[92m         self._proc_data_seen = self.var("proc_data_seen", 1)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: hold_reg has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crdhold.py:112[0m
[92m         self._data_to_procfifo = self.var("data_to_fifo", self.data_width)[0m
[92m         self._eos_to_procfifo = self.var("eos_to_fifo", 1)[0m
[91m>        self._hold_reg = self.var("hold_reg", self.data_width)[0m
[92m [0m
[92m         # Interface to downstream[0m
[94m--------------------------------------------------------------------------------[0m
Variable: proc_data_seen has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crdhold.py:256[0m
[92m         self._base_data_seen = self.var("base_data_seen", 1)[0m
[92m         self.wire(self._base_data_seen, self._base_infifo_in_valid & ~self._base_infifo_in_eos)[0m
[91m>        self._proc_data_seen = self.var("proc_data_seen", 1)[0m
[92m         self.wire(self._proc_data_seen, self._proc_infifo_in_valid & ~self._proc_infifo_in_eos)[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: pushed_base_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: pushed_proc_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: pushing_done has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crdhold.py:287[0m
[92m                   (self._base_infifo_in_data[9, 8] == kts.const(1, 2)) & (self._proc_infifo_in_data[9, 8] == kts.const(1, 2)))[0m
[92m [0m
[91m>        self._pushing_done = self.var("pushing_done", 1)[0m
[92m         self.wire(self._pushing_done, self._base_infifo_in_valid & self._base_infifo_in_eos & self._proc_infifo_in_valid & self._proc_infifo_in_eos &[0m
[92m                   (self._base_infifo_in_data[9, 8] == kts.const(1, 2)) & (self._proc_infifo_in_data[9, 8] == kts.const(1, 2)) & ~base_outfifo.ports.full & ~proc_outfifo.ports.full)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: seen_root_eos_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: set_last_pushed_data_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: base_data_seen has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crddrop.py:250[0m
[92m         ####################[0m
[92m [0m
[91m>        self._base_data_seen = self.var("base_data_seen", 1)[0m
[92m         self.wire(self._base_data_seen, self._base_infifo_in_valid & ~self._base_infifo_in_eos)[0m
[92m         self._proc_data_seen = self.var("proc_data_seen", 1)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: base_done_seen has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crddrop.py:264[0m
[92m         self.wire(self._eos_seen, self._base_infifo_in_valid & self._base_infifo_in_eos & (self._base_infifo_in_data[9, 8] == kts.const(0, 2)))[0m
[92m [0m
[91m>        self._done_seen = self.var("base_done_seen", 1)[0m
[92m         self.wire(self._done_seen, self._base_infifo_in_valid & self._base_infifo_in_eos & (self._base_infifo_in_data[9, 8] == kts.const(1, 2)))[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: base_eos_seen has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crddrop.py:261[0m
[92m                                               seq_only=True)[0m
[92m [0m
[91m>        self._eos_seen = self.var("base_eos_seen", 1)[0m
[92m         self.wire(self._eos_seen, self._base_infifo_in_valid & self._base_infifo_in_eos & (self._base_infifo_in_data[9, 8] == kts.const(0, 2)))[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: both_done has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crddrop.py:280[0m
[92m                                             clear=self._clr_pushed_stop_lvl, name="pushed_stop_lvl", seq_only=True)[0m
[92m [0m
[91m>        self._both_done = self.var("both_done", 1)[0m
[92m         self.wire(self._both_done, self._base_infifo_in_valid & self._base_infifo_in_eos & self._proc_infifo_in_valid & self._proc_infifo_in_eos &[0m
[92m                   (self._base_infifo_in_data[9, 8] == kts.const(1, 2)) & (self._proc_infifo_in_data[9, 8] == kts.const(1, 2)))[0m
[94m--------------------------------------------------------------------------------[0m
Variable: proc_data_seen has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crddrop.py:252[0m
[92m         self._base_data_seen = self.var("base_data_seen", 1)[0m
[92m         self.wire(self._base_data_seen, self._base_infifo_in_valid & ~self._base_infifo_in_eos)[0m
[91m>        self._proc_data_seen = self.var("proc_data_seen", 1)[0m
[92m         self.wire(self._proc_data_seen, self._proc_infifo_in_valid & ~self._proc_infifo_in_eos)[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: pushed_proc_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: pushed_stop_lvl_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: pushing_done has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/crddrop.py:284[0m
[92m                   (self._base_infifo_in_data[9, 8] == kts.const(1, 2)) & (self._proc_infifo_in_data[9, 8] == kts.const(1, 2)))[0m
[92m [0m
[91m>        self._pushing_s0 = self.var("pushing_done", 1)[0m
[92m         self.wire(self._pushing_s0, self._base_infifo_in_valid & self._base_infifo_in_eos & self._proc_infifo_in_valid & self._proc_infifo_in_eos &[0m
[92m                   (self._base_infifo_in_data[9, 8] == kts.const(1, 2)) & (self._proc_infifo_in_data[9, 8] == kts.const(1, 2)) & ~base_outfifo.ports.full & ~proc_outfifo.ports.full)[0m
[94m--------------------------------------------------------------------------------[0m
strg_ub_thin_PondTop
FOUND BULK
INPUTS DICT
{17: [{'strg_ub_thin_PondTop_flat': 'data_in_f_0'}, {'strg_ub_thin_PondTop_flat': 'data_in_f_1'}]}
Printing mode map...
{'strg_ub_thin_PondTop': (0, 'bulk')}
strg_ub_thin_PondTop
Printing mode map...
{'strg_ub_thin_PondTop': (0, 'bulk')}
strg_ub_thin_PondTop
Variable: strt_addr has no sink
Variable: strt_addr has no sink
Variable: strt_addr has no sink
Variable: strt_addr has no sink
fiber_access_16
FOUND BULK
strg_ub_vec
FOUND BULK
strg_ram_64_512_delay1
FOUND BULK
stencil_valid
FOUND EXCLUSIVE
INPUTS DICT
{17: [{'fiber_access_16_flat': 'read_scanner_us_pos_in_f_'}, {'fiber_access_16_flat': 'write_scanner_addr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_block_wr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_data_in_f_'}]}
INPUTS DICT
{17: [{'fiber_access_16_flat': 'read_scanner_us_pos_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_0'}, {'fiber_access_16_flat': 'write_scanner_addr_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_1'}, {'fiber_access_16_flat': 'write_scanner_block_wr_in_f_', 'strg_ub_vec_flat': 'data_in_f_0'}, {'fiber_access_16_flat': 'write_scanner_data_in_f_', 'strg_ub_vec_flat': 'data_in_f_1'}]}
INPUTS DICT
{17: [{'fiber_access_16_flat': 'read_scanner_us_pos_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_0', 'strg_ram_64_512_delay1_flat': 'data_in_f_'}, {'fiber_access_16_flat': 'write_scanner_addr_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_1', 'strg_ram_64_512_delay1_flat': 'rd_addr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_block_wr_in_f_', 'strg_ub_vec_flat': 'data_in_f_0', 'strg_ram_64_512_delay1_flat': 'wr_addr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_data_in_f_', 'strg_ub_vec_flat': 'data_in_f_1'}], 1: [{'strg_ram_64_512_delay1_flat': 'ren_f_'}, {'strg_ram_64_512_delay1_flat': 'wen_f_'}]}
INPUTS DICT
{17: [{'fiber_access_16_flat': 'read_scanner_us_pos_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_0', 'strg_ram_64_512_delay1_flat': 'data_in_f_'}, {'fiber_access_16_flat': 'write_scanner_addr_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_1', 'strg_ram_64_512_delay1_flat': 'rd_addr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_block_wr_in_f_', 'strg_ub_vec_flat': 'data_in_f_0', 'strg_ram_64_512_delay1_flat': 'wr_addr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_data_in_f_', 'strg_ub_vec_flat': 'data_in_f_1'}], 1: [{'strg_ram_64_512_delay1_flat': 'ren_f_'}, {'strg_ram_64_512_delay1_flat': 'wen_f_'}]}
[(~full, 0), (1'h1, 1), (1'h1, 2)]
[(~full, 0), (1'h1, 1), (1'h1, 2)]
[(~full, 0), (1'h1, 1), (1'h1, 2)]
[(~full, 0), (1'h1, 1)]
[(~empty, 0), (1'h1, 1), (1'h1, 2)]
[(~empty, 0), (1'h1, 1)]
[(~empty, 0)]
Exclusive port...
Printing mode map...
{'fiber_access_16': (0, 'bulk'), 'strg_ub_vec': (1, 'bulk'), 'strg_ram_64_512_delay1': (2, 'bulk'), 'stencil_valid': (0, 'excl')}
fiber_access_16
strg_ub_vec
strg_ram_64_512_delay1
=====MEMORY TILE BUILDER=====
===CONTROLLERS===
[<lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f482faaed00>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bd1bfac0>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bc7e2b80>, <lake.top.memory_controller.MemoryControllerFlatWrapper object at 0x7f47bca84490>]
===INPUTS===
1: [{'strg_ram_64_512_delay1_flat': 'ren_f_'}, {'strg_ram_64_512_delay1_flat': 'wen_f_'}]
17: [{'fiber_access_16_flat': 'read_scanner_us_pos_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_0', 'strg_ram_64_512_delay1_flat': 'data_in_f_'}, {'fiber_access_16_flat': 'write_scanner_addr_in_f_', 'strg_ub_vec_flat': 'chain_data_in_f_1', 'strg_ram_64_512_delay1_flat': 'rd_addr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_block_wr_in_f_', 'strg_ub_vec_flat': 'data_in_f_0', 'strg_ram_64_512_delay1_flat': 'wr_addr_in_f_'}, {'fiber_access_16_flat': 'write_scanner_data_in_f_', 'strg_ub_vec_flat': 'data_in_f_1'}]
===OUTPUTS===
1: [{'strg_ub_vec_flat': 'accessor_output_f_b_0', 'strg_ram_64_512_delay1_flat': 'ready_f_'}, {'strg_ub_vec_flat': 'accessor_output_f_b_1', 'strg_ram_64_512_delay1_flat': 'valid_out_f_'}, {'stencil_valid_flat': 'stencil_valid_f_'}]
17: [{'fiber_access_16_flat': 'read_scanner_block_rd_out_f_', 'strg_ub_vec_flat': 'data_out_f_0', 'strg_ram_64_512_delay1_flat': 'data_out_f_'}, {'fiber_access_16_flat': 'read_scanner_coord_out_f_', 'strg_ub_vec_flat': 'data_out_f_1'}, {'fiber_access_16_flat': 'read_scanner_pos_out_f_'}]
===MEMPORTS===
BANK: 0	 PORT: 0
CONN 0	CONTROLLER: fiber_access_16	PORT: Port: Type: MemoryPortType.READWRITE, conns:
conn: data_in, fiber_access_16_inst_buffet_data_to_mem_lifted_lifted
conn: data_out, fiber_access_16_inst_buffet_data_from_mem_lifted_lifted
conn: write_addr, fiber_access_16_inst_buffet_addr_to_mem_lifted_lifted
conn: write_enable, fiber_access_16_inst_buffet_wen_to_mem_lifted_lifted
conn: read_addr, fiber_access_16_inst_buffet_addr_to_mem_lifted_lifted
conn: read_enable, fiber_access_16_inst_buffet_ren_to_mem_lifted_lifted

CONN 1	CONTROLLER: strg_ub_vec	PORT: Port: Type: MemoryPortType.READWRITE, conns:
conn: data_in, strg_ub_vec_inst_data_to_strg_lifted
conn: data_out, strg_ub_vec_inst_data_from_strg_lifted
conn: write_addr, strg_ub_vec_inst_addr_out_lifted
conn: write_enable, strg_ub_vec_inst_wen_to_strg_lifted
conn: read_addr, strg_ub_vec_inst_addr_out_lifted
conn: read_enable, strg_ub_vec_inst_ren_to_strg_lifted

CONN 2	CONTROLLER: strg_ram_64_512_delay1	PORT: Port: Type: MemoryPortType.READWRITE, conns:
conn: data_in, strg_ram_64_512_delay1_inst_data_to_strg_lifted
conn: data_out, strg_ram_64_512_delay1_inst_data_from_strg_lifted
conn: write_addr, strg_ram_64_512_delay1_inst_addr_out_lifted
conn: write_enable, strg_ram_64_512_delay1_inst_wen_to_strg_lifted
conn: read_addr, strg_ram_64_512_delay1_inst_addr_out_lifted
conn: read_enable, strg_ram_64_512_delay1_inst_ren_to_strg_lifted

Variable: jump_next_0 has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/reservation_fifo.py:247[0m
[92m         self._next_0_valid = self.var("next_0_valid", self.ptr_width)[0m
[92m         # Actually is a next 0[0m
[91m>        self._jump_next_0 = self.var("jump_next_0", 1)[0m
[92m         self.wire(self._jump_next_0, self._next_0_valid_high_found | self._next_0_valid_low_found)[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: jump_next_0 has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/reservation_fifo.py:247[0m
[92m         self._next_0_valid = self.var("next_0_valid", self.ptr_width)[0m
[92m         # Actually is a next 0[0m
[91m>        self._jump_next_0 = self.var("jump_next_0", 1)[0m
[92m         self.wire(self._jump_next_0, self._next_0_valid_high_found | self._next_0_valid_low_found)[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: IN_DONE has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/write_scanner.py:438[0m
[92m         self._ID_curr = self.var("ID_curr", self.data_width)[0m
[92m [0m
[91m>        self._in_done = self.var("IN_DONE", 1)[0m
[92m [0m
[92m         # Create FSM[0m
[94m--------------------------------------------------------------------------------[0m
Variable: crd_rd_rsp_fifo_pop has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:307[0m
[92m         self._rd_rsp_fifo_pop = self.var("rd_rsp_fifo_pop", 1)[0m
[92m         self._seg_rd_rsp_fifo_pop = self.var("seg_rd_rsp_fifo_pop", 1)[0m
[91m>        self._crd_rd_rsp_fifo_pop = self.var("crd_rd_rsp_fifo_pop", 1)[0m
[92m [0m
[92m         # Every response has preallocated room - should be able to wire to 1[0m
[94m--------------------------------------------------------------------------------[0m
Variable: fiber_addr has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:678[0m
[92m [0m
[92m         # Set up fiber addr[0m
[91m>        self._fiber_addr = self.var("fiber_addr", self.data_width, packed=True)[0m
[92m         self.wire(self._fiber_addr, self._fiber_addr_pre + self._seq_addr)[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: fiber_addr_pre_d1_d1 has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:524[0m
[92m     if name is not None:[0m
[92m         use_name = name[0m
[91m>    reg = generator.var(use_name, signal.width, size=signal.size, packed=packed)[0m
[92m [0m
[92m     @always_ff((posedge, "clk"), (negedge, "rst_n"))[0m
[94m--------------------------------------------------------------------------------[0m
Variable: fifo_full has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:698[0m
[92m         # Join the individual fifo fulls[0m
[92m         self._fifo_full_pre = self.var("fifo_full_pre", 2)[0m
[91m>        self._fifo_full = self.var("fifo_full", 1)[0m
[92m         self.wire(self._fifo_full, self._fifo_full_pre.r_or())[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: iter_finish_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: payload_ptr has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:185[0m
[92m [0m
[92m         # Point to the row in storage for data recovery[0m
[91m>        self._payload_ptr = self.var("payload_ptr", self.data_width)[0m
[92m         # self._payload_ptr.add_attribute(ControlSignalAttr(is_control=False, full_bus=True))[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: pop_infifo_sticky_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: pos_addr has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:608[0m
[92m [0m
[92m         # Contains the address as the position for the ptr array[0m
[91m>        self._pos_addr = self.var("pos_addr", self.data_width, packed=True)[0m
[92m [0m
[92m         self._valid_inc = self.var("valid_inc", 1)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: rd_rsp_fifo_out_data_d1 has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:524[0m
[92m     if name is not None:[0m
[92m         use_name = name[0m
[91m>    reg = generator.var(use_name, signal.width, size=signal.size, packed=packed)[0m
[92m [0m
[92m     @always_ff((posedge, "clk"), (negedge, "rst_n"))[0m
[94m--------------------------------------------------------------------------------[0m
Variable: readout_dst_crd has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:548[0m
[92m [0m
[92m         self._readout_dst_seg = self.var("readout_dst_seg", 1)[0m
[91m>        self._readout_dst_crd = self.var("readout_dst_crd", 1)[0m
[92m         self._readout_dst_out = self.var("readout_dst_out", 1)[0m
[92m         # Technically if you reserved something it will always be ready to receive[0m
[94m--------------------------------------------------------------------------------[0m
Variable: readout_dst_seg has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:547[0m
[92m         # self._block_rd_out_to_fifo = self.var("block_rd_out_to_fifo", self.data_width + 1)[0m
[92m [0m
[91m>        self._readout_dst_seg = self.var("readout_dst_seg", 1)[0m
[92m         self._readout_dst_crd = self.var("readout_dst_crd", 1)[0m
[92m         self._readout_dst_out = self.var("readout_dst_out", 1)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: rep_finish_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: seen_root_eos_sticky has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/utils/util.py:558[0m
[92m     generator.add_code(reg_code)[0m
[92m [0m
[91m>    sticky = generator.var(f"{use_name}_sticky", 1)[0m
[92m     if seq_only:[0m
[92m         if verbose:[0m
[94m--------------------------------------------------------------------------------[0m
Variable: seg_rd_rsp_fifo_pop has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:306[0m
[92m         # Read Response FIFO[0m
[92m         self._rd_rsp_fifo_pop = self.var("rd_rsp_fifo_pop", 1)[0m
[91m>        self._seg_rd_rsp_fifo_pop = self.var("seg_rd_rsp_fifo_pop", 1)[0m
[92m         self._crd_rd_rsp_fifo_pop = self.var("crd_rd_rsp_fifo_pop", 1)[0m
[92m [0m
[94m--------------------------------------------------------------------------------[0m
Variable: seq_length has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/scanner_pipe.py:643[0m
[92m [0m
[92m         self._update_seq_state = self.var("update_seq_state", 1)[0m
[91m>        self._seq_length = self.var("seq_length", 16)[0m
[92m         self._seq_addr = self.var("seq_addr", 16)[0m
[92m         self._next_seq_length = self.var("next_seq_length", 16)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: tmp_rd_base has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/buffet_like.py:1245[0m
[92m                 rd_base = kts.ternary(rd_acqs[i + 1], self._blk_base[i + 1] + self._buffet_base[i + 1], rd_base)[0m
[92m             tmp_wr_base = self.var("tmp_wr_base", self._buffet_base[0].width)[0m
[91m>            tmp_rd_base = self.var("tmp_rd_base", self._buffet_base[0].width)[0m
[92m             self.wire(tmp_wr_base, wr_base)[0m
[92m             self.wire(tmp_rd_base, rd_base)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: tmp_wr_base has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/buffet_like.py:1244[0m
[92m                 # rd_base = kts.ternary(rd_acqs[i + 1] | self._use_cached_read[i + 1], self._blk_base[i + 1] + self._buffet_base[i + 1], rd_base)[0m
[92m                 rd_base = kts.ternary(rd_acqs[i + 1], self._blk_base[i + 1] + self._buffet_base[i + 1], rd_base)[0m
[91m>            tmp_wr_base = self.var("tmp_wr_base", self._buffet_base[0].width)[0m
[92m             tmp_rd_base = self.var("tmp_rd_base", self._buffet_base[0].width)[0m
[92m             self.wire(tmp_wr_base, wr_base)[0m
[94m--------------------------------------------------------------------------------[0m
Variable: wen_full has no sink
[94m--------------------------------------------------------------------------------[0m
[94m/aha/lake/lake/modules/buffet_like.py:183[0m
[92m         self._blk_bounds = self.var("blk_bounds", self.data_width, size=self.num_ID, explicit_array=True, packed=True)[0m
[92m [0m
[91m>        self._wen_full = self.var("wen_full", self.num_ID)[0m
[92m [0m
[92m         # Read side address + ren[0m
[94m--------------------------------------------------------------------------------[0m
Creating register tree for: io16in_bias_host_stencil_op_hcompute_bias_glb_stencil_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_0_op_hcompute_input_glb_stencil_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_1_op_hcompute_input_glb_stencil_1_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_2_op_hcompute_input_glb_stencil_2_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_3_op_hcompute_input_glb_stencil_3_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_4_op_hcompute_kernel_glb_stencil_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_6_op_hcompute_kernel_glb_stencil_2_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_7_op_hcompute_kernel_glb_stencil_3_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_5_op_hcompute_kernel_glb_stencil_1_read_0 with 16 sinks and 3 stages
PEs: 152
MEMs: 40
Ponds: 64
IOs: 17
Regs: 63
Trying placement with PnR placer exp: 0
Unable to determine tmax. Use default temperature
344.000000 -> 344.000000 improvement: 0.000000 total: 0.000000
using bit_width 1
Routing iteration:   0 duration: 413 ms
using bit_width 17
terminate called after throwing an instance of 'UnableRouteException'
  what():  unable to route from SB (4, 0, 2, 2, 1, 17) req_regs 1
Unable to route with PNR_PLACER_EXP: 0
Trying placement with PnR placer exp: 1
1812.000000 -> 1099.000000 improvement: 0.393488 total: 0.000000
1099.000000 -> 1099.000000 improvement: 0.000000 total: 0.393488
using bit_width 1
Routing iteration:   0 duration: 85 ms
using bit_width 17
Routing iteration:   0 duration: 1194 ms
Routing iteration:   1 duration: 1056 ms
Routing iteration:   2 duration: 1054 ms
Routing iteration:   3 duration: 1032 ms
removing edge RouteType.PORT,11,11,0,0,0,17,MEM_input_width_17_num_3,e171,0,0,False,None m124
removing edge RouteType.PORT,7,5,0,0,0,17,MEM_input_width_17_num_3,e232,0,0,False,None m133
removing edge RouteType.PORT,11,4,0,0,0,17,MEM_input_width_17_num_3,e867,0,0,False,None m232
removing edge RouteType.PORT,11,9,0,0,0,17,MEM_input_width_17_num_3,e635,0,0,False,None m196
removing edge RouteType.PORT,19,7,0,0,0,17,MEM_input_width_17_num_3,e293,0,0,False,None m142
removing edge RouteType.PORT,11,7,0,0,0,17,MEM_input_width_17_num_3,e922,0,0,False,None m241
removing edge RouteType.PORT,11,5,0,0,0,17,MEM_input_width_17_num_3,e693,0,0,False,None m205
removing edge RouteType.PORT,19,13,0,0,0,17,MEM_input_width_17_num_3,e354,0,0,False,None m151
removing edge RouteType.PORT,19,12,0,0,0,17,MEM_input_width_17_num_3,e977,0,0,False,None m250
removing edge RouteType.PORT,15,10,0,0,0,17,MEM_input_width_17_num_3,e751,0,0,False,None m214
removing edge RouteType.PORT,23,12,0,0,0,17,MEM_input_width_17_num_3,e412,0,0,False,None m160
removing edge RouteType.PORT,23,10,0,0,0,17,MEM_input_width_17_num_3,e1032,0,0,False,None m259
removing edge RouteType.PORT,27,9,0,0,0,17,MEM_input_width_17_num_3,e809,0,0,False,None m223
removing edge RouteType.PORT,27,11,0,0,0,17,MEM_input_width_17_num_3,e577,0,0,False,None m187
removing edge RouteType.PORT,7,7,0,0,0,17,MEM_input_width_17_num_3,e467,0,0,False,None m169
removing edge RouteType.PORT,23,3,0,0,0,17,MEM_input_width_17_num_3,e522,0,0,False,None m178
removing edge RouteType.PORT,18,5,0,0,0,17,PE_input_width_17_num_0,e270,0,0,False,None p137
removing edge RouteType.PORT,9,4,0,0,0,17,PE_input_width_17_num_0,e209,0,0,False,None p128
removing edge RouteType.PORT,5,6,0,0,0,17,PE_input_width_17_num_0,e444,0,0,False,None p164
removing edge RouteType.PORT,4,6,0,0,0,17,PE_input_width_17_num_0,e899,0,0,False,None p236
removing edge RouteType.PORT,12,4,0,0,0,17,PE_input_width_17_num_0,e670,0,0,False,None p200
removing edge RouteType.PORT,14,4,0,0,0,17,PE_input_width_17_num_0,e844,0,0,False,None p227
removing edge RouteType.PORT,12,8,0,0,0,17,PE_input_width_17_num_0,e612,0,0,False,None p191
removing edge RouteType.PORT,18,12,0,0,0,17,PE_input_width_17_num_0,e331,0,0,False,None p146
removing edge RouteType.PORT,10,15,0,0,0,17,PE_input_width_17_num_0,e145,0,0,False,None p119
removing edge RouteType.PORT,9,14,0,0,0,17,PE_input_width_17_num_0,e728,0,0,False,None p209
removing edge RouteType.PORT,16,14,0,0,0,17,PE_input_width_17_num_0,e954,0,0,False,None p245
removing edge RouteType.PORT,25,11,0,0,0,17,PE_input_width_17_num_0,e389,0,0,False,None p155
removing edge RouteType.PORT,24,5,0,0,0,17,PE_input_width_17_num_0,e499,0,0,False,None p173
removing edge RouteType.PORT,26,10,0,0,0,17,PE_input_width_17_num_0,e554,0,0,False,None p182
removing edge RouteType.PORT,28,9,0,0,0,17,PE_input_width_17_num_0,e786,0,0,False,None p218
removing edge RouteType.PORT,22,9,0,0,0,17,PE_input_width_17_num_0,e1009,0,0,False,None p254
removing edge RouteType.PORT,26,3,0,0,0,17,PE_input_width_17_num_0,e491,0,0,False,None p172
removing edge RouteType.PORT,28,7,0,0,0,17,PE_input_width_17_num_0,e778,0,0,False,None p217
removing edge RouteType.PORT,24,10,0,0,0,17,PE_input_width_17_num_0,e378,0,0,False,None p154
removing edge RouteType.PORT,26,12,0,0,0,17,PE_input_width_17_num_0,e546,0,0,False,None p181
removing edge RouteType.PORT,18,11,0,0,0,17,PE_input_width_17_num_0,e320,0,0,False,None p145
removing edge RouteType.PORT,21,11,0,0,0,17,PE_input_width_17_num_0,e946,0,0,False,None p244
removing edge RouteType.PORT,18,6,0,0,0,17,PE_input_width_17_num_0,e259,0,0,False,None p136
removing edge RouteType.PORT,13,13,0,0,0,17,PE_input_width_17_num_0,e134,0,0,False,None p118
removing edge RouteType.PORT,9,13,0,0,0,17,PE_input_width_17_num_0,e720,0,0,False,None p208
removing edge RouteType.PORT,13,8,0,0,0,17,PE_input_width_17_num_0,e604,0,0,False,None p190
removing edge RouteType.PORT,10,6,0,0,0,17,PE_input_width_17_num_0,e198,0,0,False,None p127
removing edge RouteType.PORT,5,11,0,0,0,17,PE_input_width_17_num_0,e436,0,0,False,None p163
removing edge RouteType.PORT,5,9,0,0,0,17,PE_input_width_17_num_0,e891,0,0,False,None p235
removing edge RouteType.PORT,12,7,0,0,0,17,PE_input_width_17_num_0,e662,0,0,False,None p199
removing edge RouteType.PORT,17,3,0,0,0,17,PE_input_width_17_num_0,e836,0,0,False,None p226
removing edge RouteType.PORT,22,7,0,0,0,17,PE_input_width_17_num_0,e1001,0,0,False,None p253
removing edge RouteType.PORT,24,11,0,0,0,17,PE_input_width_17_num_0,e370,0,0,False,None p153
removing edge RouteType.PORT,25,8,0,0,0,17,PE_input_width_17_num_0,e770,0,0,False,None p216
removing edge RouteType.PORT,24,3,0,0,0,17,PE_input_width_17_num_0,e483,0,0,False,None p171
removing edge RouteType.PORT,18,7,0,0,0,17,PE_input_width_17_num_0,e251,0,0,False,None p135
removing edge RouteType.PORT,9,7,0,0,0,17,PE_input_width_17_num_0,e190,0,0,False,None p126
removing edge RouteType.PORT,6,7,0,0,0,17,PE_input_width_17_num_0,e883,0,0,False,None p234
removing edge RouteType.PORT,12,2,0,0,0,17,PE_input_width_17_num_0,e828,0,0,False,None p225
removing edge RouteType.PORT,14,7,0,0,0,17,PE_input_width_17_num_0,e654,0,0,False,None p198
removing edge RouteType.PORT,21,7,0,0,0,17,PE_input_width_17_num_0,e993,0,0,False,None p252
removing edge RouteType.PORT,25,15,0,0,0,17,PE_input_width_17_num_0,e538,0,0,False,None p180
removing edge RouteType.PORT,13,15,0,0,0,17,PE_input_width_17_num_0,e123,0,0,False,None p117
removing edge RouteType.PORT,6,11,0,0,0,17,PE_input_width_17_num_0,e428,0,0,False,None p162
removing edge RouteType.PORT,10,12,0,0,0,17,PE_input_width_17_num_0,e712,0,0,False,None p207
removing edge RouteType.PORT,16,11,0,0,0,17,PE_input_width_17_num_0,e312,0,0,False,None p144
removing edge RouteType.PORT,16,10,0,0,0,17,PE_input_width_17_num_0,e596,0,0,False,None p189
removing edge RouteType.PORT,21,13,0,0,0,17,PE_input_width_17_num_0,e938,0,0,False,None p243
removing edge RouteType.PORT,8,5,0,0,0,17,PE_input_width_17_num_0,e182,0,0,False,None p125
removing edge RouteType.PORT,8,9,0,0,0,17,PE_input_width_17_num_0,e875,0,0,False,None p233
removing edge RouteType.PORT,5,8,0,0,0,17,PE_input_width_17_num_0,e420,0,0,False,None p161
removing edge RouteType.PORT,14,10,0,0,0,17,PE_input_width_17_num_0,e112,0,0,False,None p116
removing edge RouteType.PORT,16,12,0,0,0,17,PE_input_width_17_num_0,e304,0,0,False,None p143
removing edge RouteType.PORT,17,14,0,0,0,17,PE_input_width_17_num_0,e930,0,0,False,None p242
removing edge RouteType.PORT,14,13,0,0,0,17,PE_input_width_17_num_0,e704,0,0,False,None p206
removing edge RouteType.PORT,17,8,0,0,0,17,PE_input_width_17_num_0,e243,0,0,False,None p134
removing edge RouteType.PORT,18,9,0,0,0,17,PE_input_width_17_num_0,e588,0,0,False,None p188
removing edge RouteType.PORT,25,13,0,0,0,17,PE_input_width_17_num_0,e362,0,0,False,None p152
removing edge RouteType.PORT,25,14,0,0,0,17,PE_input_width_17_num_0,e530,0,0,False,None p179
removing edge RouteType.PORT,24,8,0,0,0,17,PE_input_width_17_num_0,e762,0,0,False,None p215
removing edge RouteType.PORT,21,9,0,0,0,17,PE_input_width_17_num_0,e985,0,0,False,None p251
removing edge RouteType.PORT,22,2,0,0,0,17,PE_input_width_17_num_0,e475,0,0,False,None p170
removing edge RouteType.PORT,13,4,0,0,0,17,PE_input_width_17_num_0,e646,0,0,False,None p197
removing edge RouteType.PORT,9,2,0,0,0,17,PE_input_width_17_num_0,e820,0,0,False,None p224

Application Frequency:
	Maximum clock frequency: 115 MHz
	Critical Path: 8691.24 ps
	Critical Path Info:
		Glbs: 0
		PEs: 0
		Mems: 1
		Rmux: 0
		SB delay: 7203.24 ps
		SB delay: [153.3, 151.0, 151.0, 148.5, 153.3, 146.39, 240, 171.3, 148.5, 153.3, 151.0, 240, 146.39, 151.7, 218.8, 171.3, 146.39, 171.3, 146.39, 178.7, 164.1, 218.8, 240, 151.7, 151.7, 151.7, 218.8, 171.3, 146.39, 151.7, 151.7, 218.8, 151.7, 178.7, 240, 184.89, 164.1, 151.7, 219.2, 197.7, 240] ps
		SB delay ready-valid: 0 ps
		SB delay ready-valid: [] ps
		SB clk delay: -488 ps
		SB clk delay: [-70, -61, -61, -61, 0, -61, 0, -61, 0, -61, -61, 0, 70, -70, -61, 0, -61, 0, 61, 70, -70, 0, 0, 70, -70, -61, 0, 0, 70, -70, 0, 61, 61, 0, 70, -61] ps
No match for hcompute_output_cgra_stencil
No match for hcompute_output_cgra_stencil_1
No match for hcompute_output_cgra_stencil_10
No match for hcompute_output_cgra_stencil_11
No match for hcompute_output_cgra_stencil_12
No match for hcompute_output_cgra_stencil_13
No match for hcompute_output_cgra_stencil_14
No match for hcompute_output_cgra_stencil_15
No match for hcompute_output_cgra_stencil_2
No match for hcompute_output_cgra_stencil_3
No match for hcompute_output_cgra_stencil_4
No match for hcompute_output_cgra_stencil_5
No match for hcompute_output_cgra_stencil_6
No match for hcompute_output_cgra_stencil_7
No match for hcompute_output_cgra_stencil_8
No match for hcompute_output_cgra_stencil_9
make: Entering directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
cd ./bin && \
CLKWRK_PATH=/aha/clockwork LD_LIBRARY_PATH=/aha/clockwork/lib:/aha/coreir/lib LAKE_PATH=/aha/lake LAKE_CONTROLLERS=/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin LAKE_STREAM=./bin COREIR_PATH=/aha/coreir \
./clockwork_codegen compile_mem_use_metamapper 1>mem_cout 2> >(tee -a mem_cout >&2); \
EXIT_CODE=$?; rm unoptimized_conv2D_fp*; cd ..; exit $EXIT_CODE
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
isl_input.c:2729: Assertion "obj.type == (&isl_obj_map_vtable) || obj.type == (&isl_obj_set_vtable)" failed
python ../../hw_support/copy_clockwork_schedules.py ./bin/map_result/conv2D_fp/conv2D_fp_to_metamapper.json ./bin/design_top.json ./bin/conv2D_fp_flush_latencies.json ./bin/conv2D_fp_pond_latencies.json
make: Leaving directory '/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp'
Creating register tree for: io16in_bias_host_stencil_op_hcompute_bias_glb_stencil_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_0_op_hcompute_input_glb_stencil_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_1_op_hcompute_input_glb_stencil_1_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_2_op_hcompute_input_glb_stencil_2_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_input_host_stencil_clkwrk_3_op_hcompute_input_glb_stencil_3_read_0 with 1 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_4_op_hcompute_kernel_glb_stencil_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_6_op_hcompute_kernel_glb_stencil_2_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_7_op_hcompute_kernel_glb_stencil_3_read_0 with 16 sinks and 3 stages
Creating register tree for: io16in_kernel_host_stencil_clkwrk_5_op_hcompute_kernel_glb_stencil_1_read_0 with 16 sinks and 3 stages
PEs: 152
MEMs: 40
Ponds: 64
IOs: 17
Regs: 63
Using extra 929 connections to fix the routing
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 7864448), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 7864448), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 7864448), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 7864448), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 8388736), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 8388736), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470103680), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4127196160), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470103680), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4127196160), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 9437312), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 9437312), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 9961600), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 9961600), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 2097280), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 2097280), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471676544), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471676544), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 2621568), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 2621568), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471676544), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471676544), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4177527808), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1472200832), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4194305024), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1472200832), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4194305024), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 3670144), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 3670144), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1472200832), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4194305024), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1472200832), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4194305024), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 4194432), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 4194432), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470103680), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4127196160), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470103680), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4127196160), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 4194432), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 4194432), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470103680), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4127196160), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470103680), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4127196160), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 5243008), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 5243008), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4143973376), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4143973376), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 5767296), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 5767296), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26263553), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4143973376), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4143973376), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 5767296), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 5767296), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4143973376), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4143973376), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 6291584), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 6291584), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2097160), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28196864), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 0), (2, 3151036416), (45, 8192), (44, 903872520), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2097160), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28196864), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 0), (2, 3151036416), (45, 8192), (44, 903872520), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 841482248), (31, 1584748), (30, 453509124), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249471489), (14, 65537), (13, 65667), (11, 2147491840), (10, 1471152256), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904921096), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2621448), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28213248), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 64), (2, 3151036416), (45, 8192), (44, 904921096), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2621448), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28213248), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 64), (2, 3151036416), (45, 8192), (44, 904921096), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [1, 12, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
start flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 4
ctrl_ranges [10, 10, 9, 25]
ctrl_cyc_strides [1, 12, 120, 1602]
ctrl_in_data_strides [1, 4, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5965240), (32, 840957960), (31, 1584748), (30, 453246980), (29, 786445), (28, 2155876357), (27, 3758620928), (26, 470548480), (25, 2621442), (24, 32635072), (22, 536870916), (21, 33619968), (20, 655424), (19, 1073807392), (18, 1543510017), (17, 16800768), (16, 258), (15, 3249455105), (14, 65537), (13, 65667), (11, 2147491840), (10, 1470627968), (9, 4203984), (8, 0), (7, 163968), (6, 268451848), (5, 385877506), (4, 4200192), (3, 0), (2, 1324138500), (45, 3422560288), (44, 904396808), (43, 1572888), (42, 1577064), (41, 262154), (34, 4160750592), (23, 67417600), (12, 0), (1, 70453), (0, 1134592), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2097160), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28229632), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 0), (2, 3151036416), (45, 8192), (44, 904921096), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2097160), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28229632), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 0), (2, 3151036416), (45, 8192), (44, 904921096), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [21, 21, 25]
ctrl_cyc_strides [1, 22, 1602]
ctrl_in_data_strides [1, 0, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2621448), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28246016), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 64), (2, 3151036416), (45, 8192), (44, 905969672), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 6553608), (32, 2621448), (31, 1057712), (30, 0), (29, 1), (28, 2167416325), (27, 3221225472), (26, 1048576), (25, 2), (24, 130540864), (22, 536870912), (21, 0), (20, 655616), (19, 1073807392), (18, 1543503872), (17, 0), (16, 256), (15, 28246016), (14, 2147516416), (13, 2147516547), (11, 0), (10, 0), (9, 0), (8, 0), (7, 163968), (6, 268451848), (5, 385875968), (4, 0), (3, 64), (2, 3151036416), (45, 8192), (44, 905969672), (43, 1572888), (42, 1577064), (41, 0), (34, 0), (23, 0), (12, 0), (1, 113625), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 1572992), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 1572992), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26230785), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 840957960), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
Found ctrl: UB
start flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
can flatten []
now can flatten []
finished flattening
ctrl_dim 3
ctrl_ranges [10, 10, 25]
ctrl_cyc_strides [16, 160, 1602]
ctrl_in_data_strides [1, 4, 0]
ctrl_out_data_strides None
AFTER
MEK2
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 7340160), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
[(40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (33, 5963784), (32, 7340160), (31, 8388752), (30, 0), (29, 1), (28, 2155876357), (27, 3221225472), (26, 8650752), (25, 2), (24, 16809984), (22, 0), (21, 0), (20, 393280), (19, 1075249152), (18, 0), (17, 0), (16, 256), (15, 26247169), (14, 65907), (13, 2147483648), (11, 0), (10, 0), (9, 0), (8, 0), (7, 98432), (6, 268812288), (5, 0), (4, 0), (3, 0), (2, 1287651328), (45, 8192), (44, 841482248), (43, 1584744), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 70912), (0, 0), (46, 2097152), (46, 16777216)]
BEFORE
AFTER
MEK2
[(40, 131680), (39, 268484632), (38, 4271), (37, 2952794112), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
[(40, 131680), (39, 268484632), (38, 4271), (37, 2952794112), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
BEFORE
AFTER
MEK2
[(40, 131680), (39, 268484632), (38, 4271), (37, 2684358656), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
[(40, 131680), (39, 268484632), (38, 4271), (37, 2684358656), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
BEFORE
AFTER
MEK2
[(40, 131680), (39, 268484632), (38, 4271), (37, 2952794112), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
[(40, 131680), (39, 268484632), (38, 4271), (37, 2952794112), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
BEFORE
AFTER
MEK2
[(40, 131680), (39, 268484632), (38, 4271), (37, 2952794112), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
[(40, 131680), (39, 268484632), (38, 4271), (37, 2952794112), (36, 273363019), (35, 805306368), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (34, 0), (23, 0), (12, 0), (1, 0), (0, 0), (46, 8388608), (46, 16777216)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 160671140882010195099840
[(3, 64), (2, 33554432), (2, 4194304), (2, 2114572), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8311385773681281584889856
[(3, 64), (2, 33554432), (2, 4194304), (2, 2998274), (1, 1078977544), (0, 65537), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191458203566092
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920960), (0, 3222274073), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 160671140882010195099840
[(3, 64), (2, 33554432), (2, 4194304), (2, 2114572), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8311385773681281584889856
[(3, 64), (2, 33554432), (2, 4194304), (2, 2998274), (1, 1078977544), (0, 65537), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191458203566092
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920960), (0, 3222274073), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 160671140882010195099840
[(3, 64), (2, 33554432), (2, 4194304), (2, 2114572), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8311385773681281584889856
[(3, 64), (2, 33554432), (2, 4194304), (2, 2998274), (1, 1078977544), (0, 65537), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191458203566092
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920960), (0, 3222274073), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M61 being packed with p116 in 14,10
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 15), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M50 being packed with p117 in 13,15
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 11), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M39 being packed with p118 in 13,13
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 7), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M28 being packed with p119 in 10,15
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 3), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65537), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M65 being packed with p125 in 8,5
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 18), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1728), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113246208), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65545), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M64 being packed with p126 in 9,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 14), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M63 being packed with p127 in 10,6
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 10), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M62 being packed with p128 in 9,4
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 6), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M69 being packed with p134 in 17,8
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 18), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1728), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113246208), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65545), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M68 being packed with p135 in 18,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 14), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M67 being packed with p136 in 18,6
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 10), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M66 being packed with p137 in 18,5
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 6), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M74 being packed with p143 in 16,12
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 18), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65545), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M73 being packed with p144 in 16,11
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 14), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M71 being packed with p145 in 18,11
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 10), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M70 being packed with p146 in 18,12
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 6), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M78 being packed with p152 in 25,13
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 18), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65545), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M77 being packed with p153 in 24,11
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 14), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M76 being packed with p154 in 24,10
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 10), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M75 being packed with p155 in 25,11
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 6), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M82 being packed with p161 in 5,8
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 19), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1728), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113246208), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65545), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M81 being packed with p162 in 6,11
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 14), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M80 being packed with p163 in 5,11
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 10), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M79 being packed with p164 in 5,6
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 7), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M87 being packed with p170 in 22,2
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 19), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1728), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113246208), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65545), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M86 being packed with p171 in 24,3
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 15), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M85 being packed with p172 in 26,3
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 11), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M84 being packed with p173 in 24,5
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 7), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M89 being packed with p179 in 25,14
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 15), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M88 being packed with p180 in 25,15
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 11), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M83 being packed with p181 in 26,12
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 7), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65539), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M72 being packed with p182 in 26,10
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 3), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65537), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M30 being packed with p188 in 18,9
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 15), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M29 being packed with p189 in 16,10
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 11), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M91 being packed with p190 in 13,8
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 8), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65540), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M90 being packed with p191 in 12,8
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 4), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M34 being packed with p197 in 13,4
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 16), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1728), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113246208), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65544), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M33 being packed with p198 in 14,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 12), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65542), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M32 being packed with p199 in 12,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 8), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65540), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M31 being packed with p200 in 12,4
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 4), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M38 being packed with p206 in 14,13
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 16), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65544), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M37 being packed with p207 in 10,12
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 12), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65542), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M36 being packed with p208 in 9,13
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 8), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65540), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M35 being packed with p209 in 9,14
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 4), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M43 being packed with p215 in 24,8
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 17), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1728), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113246208), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65544), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M42 being packed with p216 in 25,8
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 13), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65542), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M41 being packed with p217 in 28,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 9), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65540), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M40 being packed with p218 in 28,9
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 4), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M47 being packed with p224 in 9,2
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 17), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1728), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113246208), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65544), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M46 being packed with p225 in 12,2
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 13), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65542), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M45 being packed with p226 in 17,3
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 9), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65540), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M44 being packed with p227 in 14,4
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 5), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M52 being packed with p233 in 8,9
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 16), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65544), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M51 being packed with p234 in 6,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 13), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65542), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M49 being packed with p235 in 5,9
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 8), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65540), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M48 being packed with p236 in 4,6
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 5), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M56 being packed with p242 in 17,14
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 17), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65544), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M55 being packed with p243 in 21,13
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 13), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65542), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M54 being packed with p244 in 21,11
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 9), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1725), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113049600), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65540), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M53 being packed with p245 in 16,14
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 5), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M60 being packed with p251 in 21,9
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 17), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65544), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M59 being packed with p252 in 21,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 14), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1727), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113180672), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65543), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M58 being packed with p253 in 22,7
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 10), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1726), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 113115136), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 0), (4, 65541), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 1649273733134
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 768), (0, 12582941), (3, 196608), (3, 524288)]
pond M57 being packed with p254 in 22,9
pond config
[('in2regfile_0_sched_gen_enable', 1), ('in2regfile_0_for_loop_dimensionality', 2), ('in2regfile_0_sched_gen_sched_addr_gen_starting_addr', 5), ('in2regfile_0_addr_gen_starting_addr', 0), ('in2regfile_0_addr_gen_strides_0', 1), ('in2regfile_0_for_loop_ranges_0', 7), ('in2regfile_0_sched_gen_sched_addr_gen_strides_0', 16), ('in2regfile_0_addr_gen_strides_1', 1), ('in2regfile_0_for_loop_ranges_1', 23), ('in2regfile_0_sched_gen_sched_addr_gen_strides_1', 1474), ('regfile2out_0_sched_gen_enable', 1), ('regfile2out_0_for_loop_dimensionality', 3), ('regfile2out_0_sched_gen_sched_addr_gen_starting_addr', 1724), ('regfile2out_0_addr_gen_starting_addr', 0), ('regfile2out_0_addr_gen_strides_0', 0), ('regfile2out_0_for_loop_ranges_0', 118), ('regfile2out_0_sched_gen_sched_addr_gen_strides_0', 1), ('regfile2out_0_addr_gen_strides_1', 1), ('regfile2out_0_for_loop_ranges_1', 7), ('regfile2out_0_sched_gen_sched_addr_gen_strides_1', 1), ('regfile2out_0_addr_gen_strides_2', 1), ('regfile2out_0_for_loop_ranges_2', 23), ('regfile2out_0_sched_gen_sched_addr_gen_strides_2', 523)]
Pond config: [(17, 1), (0, 34275328), (1, 65537), (9, 0), (10, 112984064), (11, 6029314), (12, 30933020), (13, 0), (14, 135216), (15, 0), (16, 48300032), (2, 8), (3, 2147483648), (4, 65538), (5, 3014656), (6, 14), (7, 1048576), (8, 33)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 432347621607342082
[(3, 64), (2, 33554432), (2, 4194304), (2, 2097152), (1, 201327550), (0, 180879365), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 151115727451828647362752
[(3, 64), (2, 33554432), (2, 4194304), (2, 2113536), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8273586674578541613678592
[(3, 64), (2, 33554432), (2, 4194304), (2, 2994176), (1, 277809297), (0, 1258815489), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191319153999884
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920896), (0, 1048601), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 151115727451828647362752
[(3, 64), (2, 33554432), (2, 4194304), (2, 2113536), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8273586674578541613678592
[(3, 64), (2, 33554432), (2, 4194304), (2, 2994176), (1, 277809297), (0, 1258815489), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191319153999884
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920896), (0, 1048601), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 151115727451828647362752
[(3, 64), (2, 33554432), (2, 4194304), (2, 2113536), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8273586674578541613678592
[(3, 64), (2, 33554432), (2, 4194304), (2, 2994176), (1, 277809297), (0, 1258815489), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191319153999884
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920896), (0, 1048601), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 151115727451828647362752
[(3, 64), (2, 33554432), (2, 4194304), (2, 2113536), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8273586674578541613678592
[(3, 64), (2, 33554432), (2, 4194304), (2, 2994176), (1, 277809297), (0, 1258815489), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191319153999884
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920896), (0, 1048601), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 160671140882010195099840
[(3, 64), (2, 33554432), (2, 4194304), (2, 2114572), (1, 0), (0, 1048961), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 8311385773681281584889856
[(3, 64), (2, 33554432), (2, 4194304), (2, 2998274), (1, 1078977544), (0, 65537), (3, 196608), (3, 524288)]
Found ctrl: alu
OVERRIDE DENSE CONFIG: 264457711191458203566092
[(3, 64), (2, 33554432), (2, 4194304), (2, 2125824), (1, 2415920960), (0, 3222274073), (3, 196608), (3, 524288)]
parsing design top: conv2D_fp
parsing design place bin/design.place
writing to bin/design_meta.json
Using testbench file extension: .pgm.
gcc -Wno-error -Wall lib/*.c -I/aha/garnet/tests/test_app//../../global_buffer/header -I/aha/garnet/tests/test_app//../../global_controller/header -shared -o libcgra.so -fPIC
lib/map.c: In function ‘glb_map’:
lib/map.c:209:42: warning: format ‘%lx’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘int’ [-Wformat=]
  209 |         fprintf(fptr, "glb_reg_write(0x%lx", (&bs_info->config)->config[i].addr - 0x1000);
      |                                        ~~^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                          |                                      |
      |                                          long unsigned int                      int
      |                                        %x
lib/map.c:210:30: warning: format ‘%lx’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘int’ [-Wformat=]
  210 |         fprintf(fptr, ", 0x%lx);\n", (&bs_info->config)->config[i].data);
      |                            ~~^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                              |                                    |
      |                              long unsigned int                    int
      |                            %x
lib/map.c:219:46: warning: format ‘%lx’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘int’ [-Wformat=]
  219 |             fprintf(fptr, "glb_reg_write(0x%lx", (&kernel->config)->config[i].addr - 0x1000);
      |                                            ~~^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                              |                                     |
      |                                              long unsigned int                     int
      |                                            %x
lib/map.c:220:34: warning: format ‘%lx’ expects argument of type ‘long unsigned int’, but argument 3 has type ‘int’ [-Wformat=]
  220 |             fprintf(fptr, ", 0x%lx);\n", (&kernel->config)->config[i].data);
      |                                ~~^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                  |                                   |
      |                                  long unsigned int                   int
      |                                %x
vcs -sverilog -timescale=1ps/1ps -full64 -ldflags "-Wl,--no-as-needed" -CFLAGS "-m64" -top top +vcs+lic+wait +vcs+initreg+random +overlap +v2k -l vcs.log  +define+CLK_PERIOD=1ns +nospecify /aha/garnet/tests/test_app//../../global_buffer/header/global_buffer_param.svh /aha/garnet/tests/test_app//../../global_buffer/header/glb.svh /aha/garnet/tests/test_app//../../global_controller/header/glc.svh /aha/garnet/tests/test_app//../../garnet.v /aha/garnet/tests/test_app//../../global_buffer/systemRDL/output/glb_pio.sv /aha/garnet/tests/test_app//../../global_buffer/systemRDL/output/glb_jrdl_decode.sv /aha/garnet/tests/test_app//../../global_buffer/systemRDL/output/glb_jrdl_logic.sv /aha/garnet/tests/test_app//../../global_controller/systemRDL/output/glc_pio.sv /aha/garnet/tests/test_app//../../global_controller/systemRDL/output/glc_jrdl_decode.sv /aha/garnet/tests/test_app//../../global_controller/systemRDL/output/glc_jrdl_logic.sv /aha/garnet/tests/test_app//../../genesis_verif/*.sv -F tb/tb_cgra.f -y /cad/cadence/GENUS_19.10.000_lnx86/share/synth/lib/chipware/sim/verilog/CW/ -y /cad/cadence/GENUS_19.10.000_lnx86/share/synth/lib/chipware/sim/verilog/CWTECH/ +libext+.v+.sv 
/cad/synopsys/vcs/S-2021.09-SP1//bin/vcs: eval: line 2805: syntax error near unexpected token `('
/cad/synopsys/vcs/S-2021.09-SP1//bin/vcs: eval: line 2805: `/cad/synopsys/vcs/S-2021.09-SP1/bin/vcsMsgReport "LNX_OS_VERUN" "NAME="Ubuntu" VERSION="20.04.6 LTS (Focal Fossa)" ID=ubuntu ID_LIKE=debian PRETTY_NAME="Ubuntu 20.04.6 LTS" VERSION_ID="20.04" HOME_URL="https://www.ubuntu.com/" SUPPORT_URL="https://help.ubuntu.com/" BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/" PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy" VERSION_CODENAME=focal UBUNTU_CODENAME=focal" "x86_64"'

Warning-[LINX_KRNL] Unsupported Linux kernel
  Linux kernel '5.4.0-166-generic' is not supported.
  Supported versions are 2.4* or 2.6*.

*** Using c compiler gcc instead of cc ...
                         Chronologic VCS (TM)
       Version S-2021.09-SP1_Full64 -- Wed Jun  5 12:54:22 2024

                    Copyright (c) 1991 - 2021 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
   or distribution of this software is strictly prohibited.  Licensed Products
     communicate with Synopsys servers for the purpose of providing software
    updates, detecting software piracy and verifying that customers are using
    Licensed Products in conformity with the applicable License Key for such
  Licensed Products. Synopsys will use information gathered in connection with
    this process to deliver software updates and pursue software pirates and
                                   infringers.

 Inclusivity & Diversity - Visit SolvNetPlus to read the "Synopsys Statement on
            Inclusivity and Diversity" (Refer to article 000036315 at
                        https://solvnetplus.synopsys.com)

The design hasn't changed and need not be recompiled. 
If you really want to, delete file simv.daidir/.vcs.timestamp and
run VCS again.

./simv -lca -l run.log +vcs+initmem+0 +vcs+initreg+0 -sv_lib libcgra -exitstatus -ucli -i dump_fsdb.tcl  +APP0=/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp

Warning-[LCA_FEATURES_ENABLED] Usage warning
  LCA features enabled by '-lca' argument on the command line.  For more 
  information regarding list of LCA features please refer to Chapter "LCA 
  features" in the VCS Release Notes

Chronologic VCS simulator copyright 1991-2021
Contains Synopsys proprietary information.
Compiler version S-2021.09-SP1_Full64; Runtime version S-2021.09-SP1_Full64;  Jun  5 12:54 2024
ucli% if { $::env(WAVEFORM) != "0" } {
  dump -file cgra.fsdb -type FSDB
  dump -add top -fsdb_opt +mda+packedmda+struct
} elseif { $::env(WAVEFORM_GLB_ONLY) != "0" } {
  dump -file global_buffer.fsdb -type FSDB
  dump -add "top.dut.global_buffer*" -fsdb_opt +mda+packedmda+struct
}
ucli% if { $::env(SAIF) == "0" } {
  run
  exit
} else {
  stop -change top.test.test_toggle
  run
  power -gate_level on mda sv
  power top.dut
  power -enable
  run
  power -disable
  power -report run.saif 1e-15 top.dut
  run
  exit
}
Monitor initialization success
[APP0-sequential_0_fp]Initilizing the APP Done
Input 0: /aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin/bias_host_stencil.raw - 32 Byte.
Input 1: /aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin/input_host_stencil.raw - 81608 Byte.
Input 2: /aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin/kernel_host_stencil.raw - 1152 Byte.
Output 0: /aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin/hw_output.raw - 80000 Byte.
[APP0-sequential_0_fp] Parsing the metadata done
[APP0-sequential_0_fp] num_inputs: 3
[APP0-sequential_0_fp] num_outputs: 1
[APP0-sequential_0_fp] num_groups: 8
Reading input data /aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin/bias_host_stencil.raw
Parse input_0 data Done
input_0 has 1 input blocks
Reading input data /aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin/input_host_stencil.raw
Parse input_1 data Done
input_1 has 4 input blocks
Reading input data /aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp/bin/kernel_host_stencil.raw
Parse input_2 data Done
input_2 has 4 input blocks

Start mapping kernel 0
number of groups: 8
number of inputs: 3
number of outputs: 1
monitor.num_groups: 8
Mapping input_0_block_0 to global buffer
Input block mapped to tile: 0
Input block start addr: 0x0
Input block cycle start addr: 0
Input block dimensionality: 3
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 16, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 100, cycle stride: 16, data stride: 0
[ITER CTRL - loop 2] extent: 25, cycle stride: 1602, data stride: 0
=====After Optimization=====
[ITER CTRL - loop 0] extent: 14, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 98, cycle stride: 1, data stride: -30
[ITER CTRL - loop 2] extent: 23, cycle stride: 3, data stride: -30
Mapping input_1_block_0 to global buffer
Input block mapped to tile: 1
Input block start addr: 0x40000
Input block cycle start addr: 1
Input block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 21, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 21, cycle stride: 22, data stride: 101
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 20
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2020
=====After Optimization=====
[ITER CTRL - loop 0] extent: 19, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 19, cycle stride: 2, data stride: 162
[ITER CTRL - loop 2] extent: 3, cycle stride: 1142, data stride: -4040
[ITER CTRL - loop 3] extent: 3, cycle stride: 1142, data stride: -200
Mapping input_1_block_1 to global buffer
Input block mapped to tile: 2
Input block start addr: 0x80000
Input block cycle start addr: 1
Input block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 21, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 21, cycle stride: 22, data stride: 101
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 20
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2020
=====After Optimization=====
[ITER CTRL - loop 0] extent: 19, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 19, cycle stride: 2, data stride: 162
[ITER CTRL - loop 2] extent: 3, cycle stride: 1142, data stride: -4040
[ITER CTRL - loop 3] extent: 3, cycle stride: 1142, data stride: -200
Mapping input_1_block_2 to global buffer
Input block mapped to tile: 3
Input block start addr: 0xc0000
Input block cycle start addr: 1
Input block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 21, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 21, cycle stride: 22, data stride: 101
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 20
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2020
=====After Optimization=====
[ITER CTRL - loop 0] extent: 19, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 19, cycle stride: 2, data stride: 162
[ITER CTRL - loop 2] extent: 3, cycle stride: 1142, data stride: -4040
[ITER CTRL - loop 3] extent: 3, cycle stride: 1142, data stride: -200
Mapping input_1_block_3 to global buffer
Input block mapped to tile: 4
Input block start addr: 0x100000
Input block cycle start addr: 1
Input block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 21, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 21, cycle stride: 22, data stride: 101
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 20
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2020
=====After Optimization=====
[ITER CTRL - loop 0] extent: 19, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 19, cycle stride: 2, data stride: 162
[ITER CTRL - loop 2] extent: 3, cycle stride: 1142, data stride: -4040
[ITER CTRL - loop 3] extent: 3, cycle stride: 1142, data stride: -200
Mapping input_2_block_0 to global buffer
Input block mapped to tile: 5
Input block start addr: 0x140000
Input block cycle start addr: 0
Input block dimensionality: 2
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 144, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 25, cycle stride: 1602, data stride: 0
=====After Optimization=====
[ITER CTRL - loop 0] extent: 142, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 23, cycle stride: 1459, data stride: -286
Mapping input_2_block_1 to global buffer
Input block mapped to tile: 6
Input block start addr: 0x180000
Input block cycle start addr: 0
Input block dimensionality: 2
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 144, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 25, cycle stride: 1602, data stride: 0
=====After Optimization=====
[ITER CTRL - loop 0] extent: 142, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 23, cycle stride: 1459, data stride: -286
Mapping input_2_block_2 to global buffer
Input block mapped to tile: 7
Input block start addr: 0x1c0000
Input block cycle start addr: 0
Input block dimensionality: 2
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 144, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 25, cycle stride: 1602, data stride: 0
=====After Optimization=====
[ITER CTRL - loop 0] extent: 142, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 23, cycle stride: 1459, data stride: -286
Mapping input_2_block_3 to global buffer
Input block mapped to tile: 8
Input block start addr: 0x200000
Input block cycle start addr: 0
Input block dimensionality: 2
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 144, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 25, cycle stride: 1602, data stride: 0
=====After Optimization=====
[ITER CTRL - loop 0] extent: 142, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 23, cycle stride: 1459, data stride: -286
Mapping output_0_block_0 to global buffer
Output block mapped to tile: 0
Output block start addr: 0x20000
Output block cycle start addr: 2810
Output block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 40, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 10, cycle stride: 40, data stride: 200
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 40
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2000
=====After Optimization=====
[ITER CTRL - loop 0] extent: 38, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 8, cycle stride: 1, data stride: 322
[ITER CTRL - loop 2] extent: 3, cycle stride: 1203, data stride: -3598
[ITER CTRL - loop 3] extent: 3, cycle stride: 1203, data stride: 2
Mapping output_0_block_1 to global buffer
Output block mapped to tile: 1
Output block start addr: 0x60000
Output block cycle start addr: 2810
Output block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 40, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 10, cycle stride: 40, data stride: 200
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 40
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2000
=====After Optimization=====
[ITER CTRL - loop 0] extent: 38, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 8, cycle stride: 1, data stride: 322
[ITER CTRL - loop 2] extent: 3, cycle stride: 1203, data stride: -3598
[ITER CTRL - loop 3] extent: 3, cycle stride: 1203, data stride: 2
Mapping output_0_block_2 to global buffer
Output block mapped to tile: 2
Output block start addr: 0xa0000
Output block cycle start addr: 2810
Output block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 40, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 10, cycle stride: 40, data stride: 200
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 40
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2000
=====After Optimization=====
[ITER CTRL - loop 0] extent: 38, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 8, cycle stride: 1, data stride: 322
[ITER CTRL - loop 2] extent: 3, cycle stride: 1203, data stride: -3598
[ITER CTRL - loop 3] extent: 3, cycle stride: 1203, data stride: 2
Mapping output_0_block_3 to global buffer
Output block mapped to tile: 3
Output block start addr: 0xe0000
Output block cycle start addr: 2810
Output block dimensionality: 4
=====Before Optimization=====
[ITER CTRL - loop 0] extent: 40, cycle stride: 1, data stride: 1
[ITER CTRL - loop 1] extent: 10, cycle stride: 40, data stride: 200
[ITER CTRL - loop 2] extent: 5, cycle stride: 1602, data stride: 40
[ITER CTRL - loop 3] extent: 5, cycle stride: 8010, data stride: 2000
=====After Optimization=====
[ITER CTRL - loop 0] extent: 38, cycle stride: 1, data stride: 2
[ITER CTRL - loop 1] extent: 8, cycle stride: 1, data stride: 322
[ITER CTRL - loop 2] extent: 3, cycle stride: 1203, data stride: -3598
[ITER CTRL - loop 3] extent: 3, cycle stride: 1203, data stride: 2
Configuration of flush signal crossbar is updated to 0x0
[APP0-sequential_0_fp] group_start: 0
[APP0-sequential_0_fp] glb mapping success
Mapping kernel 0 Succeed
Turn on interrupt enable registers
[APP0-sequential_0_fp] write bitstream to glb start at 61.50 ns
[APP0-sequential_0_fp] write bitstream to glb end at 5764.50 ns
[APP0-sequential_0_fp] It takes 5703.00 ns time to write the bitstream to glb.
[APP0-sequential_0_fp] glb configuration start at 5764.50 ns
[APP0-sequential_0_fp] glb configuration end at 12708.50 ns
Stall CGRA with stall mask ffffffff
[APP0-sequential_0_fp] fast configuration start at 12726.50 ns
PCFG interrupt from tile 0
PCFG interrupt clear
[APP0-sequential_0_fp] fast configuration end at 18471.50 ns
[APP0-sequential_0_fp] It takes 5745.00 ns time to do parallel configuration.
[APP0-sequential_0_fp] write input_0_block_0 to glb start at 18481.50 ns
[APP0-sequential_0_fp] write input_0_block_0 to glb end at 18495.50 ns
[APP0-sequential_0_fp] It takes 14.00 ns time to write 32 Byte data to glb.
[APP0-sequential_0_fp] write input_1_block_0 to glb start at 18495.50 ns
[APP0-sequential_0_fp] write input_1_block_0 to glb end at 21056.50 ns
[APP0-sequential_0_fp] It takes 2561.00 ns time to write 20402 Byte data to glb.
[APP0-sequential_0_fp] write input_1_block_1 to glb start at 21056.50 ns
[APP0-sequential_0_fp] write input_1_block_1 to glb end at 23617.50 ns
[APP0-sequential_0_fp] It takes 2561.00 ns time to write 20402 Byte data to glb.
[APP0-sequential_0_fp] write input_1_block_2 to glb start at 23617.50 ns
[APP0-sequential_0_fp] write input_1_block_2 to glb end at 26178.50 ns
[APP0-sequential_0_fp] It takes 2561.00 ns time to write 20402 Byte data to glb.
[APP0-sequential_0_fp] write input_1_block_3 to glb start at 26178.50 ns
[APP0-sequential_0_fp] write input_1_block_3 to glb end at 28739.50 ns
[APP0-sequential_0_fp] It takes 2561.00 ns time to write 20402 Byte data to glb.
[APP0-sequential_0_fp] write input_2_block_0 to glb start at 28739.50 ns
[APP0-sequential_0_fp] write input_2_block_0 to glb end at 28785.50 ns
[APP0-sequential_0_fp] It takes 46.00 ns time to write 288 Byte data to glb.
[APP0-sequential_0_fp] write input_2_block_1 to glb start at 28785.50 ns
[APP0-sequential_0_fp] write input_2_block_1 to glb end at 28831.50 ns
[APP0-sequential_0_fp] It takes 46.00 ns time to write 288 Byte data to glb.
[APP0-sequential_0_fp] write input_2_block_2 to glb start at 28831.50 ns
[APP0-sequential_0_fp] write input_2_block_2 to glb end at 28877.50 ns
[APP0-sequential_0_fp] It takes 46.00 ns time to write 288 Byte data to glb.
[APP0-sequential_0_fp] write input_2_block_3 to glb start at 28877.50 ns
[APP0-sequential_0_fp] write input_2_block_3 to glb end at 28923.50 ns
[APP0-sequential_0_fp] It takes 46.00 ns time to write 288 Byte data to glb.
Unstall CGRA with stall mask ffffffff
[APP0-sequential_0_fp] kernel start at 28941.50 ns
STRM_G2F interrupt from tile 8
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 7
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 6
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 5
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 4
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 3
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 2
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 1
STRM_G2F interrupt clear
STRM_G2F interrupt from tile 0
STRM_G2F interrupt clear
[APP0-sequential_0_fp] GLB-to-CGRA streaming done at 69025.50 ns
STRM_F2G interrupt from tile 3
STRM_F2G interrupt from tile 2
STRM_F2G interrupt from tile 1
STRM_F2G interrupt from tile 0
[APP0-sequential_0_fp] kernel end at 70663.50 ns
[APP0-sequential_0_fp] It takes 41722.00 ns total time to run kernel.
[APP0-sequential_0_fp] The size of output is 80000 Byte.
[APP0-sequential_0_fp] The initial latency is 1638.00 ns.
[APP0-sequential_0_fp] The throughput is 0.002 (GB/s).
STRM_F2G interrupt clear
STRM_F2G interrupt clear
STRM_F2G interrupt clear
STRM_F2G interrupt clear
[APP0-sequential_0_fp] read output_0_block_0 from glb start
[APP0-sequential_0_fp] read output_0_block_0 from glb end
[APP0-sequential_0_fp] read output_0_block_1 from glb start
[APP0-sequential_0_fp] read output_0_block_1 from glb end
[APP0-sequential_0_fp] read output_0_block_2 from glb start
[APP0-sequential_0_fp] read output_0_block_2 from glb end
[APP0-sequential_0_fp] read output_0_block_3 from glb start
[APP0-sequential_0_fp] read output_0_block_3 from glb end
$finish at simulation time          80803.50 ns
           V C S   S i m u l a t i o n   R e p o r t 
Time: 80803500 ps
CPU Time:    573.120 seconds;       Data structure size: 212.2Mb
Wed Jun  5 13:03:56 2024
-------------- Dense Test Result --------------
Integer values differing:
Index: 3, Gold: 15595, Sim: 0
Index: 4, Gold: 15643, Sim: 0
Index: 6, Gold: 15650, Sim: 0
Index: 8, Gold: 15577, Sim: 0
Index: 10, Gold: 15301, Sim: 0
Index: 12, Gold: 15231, Sim: 0
Index: 13, Gold: 15418, Sim: 0
Index: 19, Gold: 15596, Sim: 0
Index: 20, Gold: 15643, Sim: 0
Index: 22, Gold: 15651, Sim: 0
Index: 24, Gold: 15583, Sim: 0
Index: 26, Gold: 15285, Sim: 0
Index: 28, Gold: 15245, Sim: 0
Index: 29, Gold: 15422, Sim: 0
Index: 35, Gold: 15601, Sim: 0
Index: 36, Gold: 15640, Sim: 0
Index: 38, Gold: 15649, Sim: 0
Index: 40, Gold: 15583, Sim: 0
Index: 42, Gold: 15307, Sim: 0
Index: 44, Gold: 15234, Sim: 0
Total differing: 17505
Traceback (most recent call last):
  File "/aha/bin/aha", line 11, in <module>
    load_entry_point('aha', 'console_scripts', 'aha')()
  File "/aha/aha/aha.py", line 51, in main
    args.dispatch(args, extra_args)
  File "/aha/aha/util/test.py", line 330, in dispatch
    assert numpy.array_equal(gold_array, sim_array), f"\033[91m{app}: Integer comparison failed.\033[0m"
AssertionError: [91mapps/sequential_0_fp: Integer comparison failed.[0m
--- Running regression: fast
--- Generating Garnet
--- apps/sequential_0_fp
--- apps/sequential_0_fp - compiling and mapping
/aha/Halide-to-Hardware/apps/hardware_benchmarks/apps/sequential_0_fp
--- apps/sequential_0_fp - pnr and pipelining
--- apps/sequential_0_fp - glb testing
Traceback (most recent call last):
  File "/aha/bin/aha", line 11, in <module>
    load_entry_point('aha', 'console_scripts', 'aha')()
  File "/aha/aha/aha.py", line 51, in main
    args.dispatch(args, extra_args)
  File "/aha/aha/util/regress.py", line 317, in dispatch
    t0, t1, t2 = test_dense_app(test, width, height, env_parameters=str(args.env_parameters))
  File "/aha/aha/util/regress.py", line 156, in test_dense_app
    buildkite_call(["aha", "test", test])
  File "/aha/aha/util/regress.py", line 26, in buildkite_call
    app = subprocess.run(
  File "/usr/lib/python3.8/subprocess.py", line 516, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['aha', 'test', 'apps/sequential_0_fp']' returned non-zero exit status 1.
